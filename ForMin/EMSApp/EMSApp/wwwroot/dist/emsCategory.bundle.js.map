{"version":3,"file":"emsCategory.bundle.js","mappings":"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AAC;IAErC,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,aAAa,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QACpD,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAClC,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAChC;;QACG,OAAO,CAAC,CAAC;AACjB,CAAC;AAVY,4BAAoB,wBAUhC;;;;;;;UC5ID;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WC5BA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://emsapp/./src/EMSCategory/EMSCategory.tsx","webpack://emsapp/./src/EMSCategory/EMSCategoryApp.tsx","webpack://emsapp/./src/EMSCategory/EMSCategoryInsertPopup.tsx","webpack://emsapp/./src/EMSCategory/EMSCategoryUpdatePopup.tsx","webpack://emsapp/./src/emsCategory.tsx","webpack://emsapp/./src/utilities/emsUtilities.tsx","webpack://emsapp/webpack/bootstrap","webpack://emsapp/webpack/runtime/chunk loaded","webpack://emsapp/webpack/runtime/compat get default export","webpack://emsapp/webpack/runtime/define property getters","webpack://emsapp/webpack/runtime/global","webpack://emsapp/webpack/runtime/hasOwnProperty shorthand","webpack://emsapp/webpack/runtime/make namespace object","webpack://emsapp/webpack/runtime/node module decorator","webpack://emsapp/webpack/runtime/jsonp chunk loading","webpack://emsapp/webpack/before-startup","webpack://emsapp/webpack/startup","webpack://emsapp/webpack/after-startup"],"sourcesContent":["import * as React from 'react';\r\nimport { Button, Paper, Grid, TextField, FormControlLabel, Checkbox, FormControl, InputLabel, Select, MenuItem, Modal, FormHelperText, Table, TableRow, TableHead, TableBody, TableCell } from '@material-ui/core';\r\nimport { baseApiUrl, getRequestOptions } from '../utilities/emsUtilities';\r\nimport { EMSCategoryInsertPopup } from './EMSCategoryInsertPopup';\r\nimport { EMSCategoryUpdatePopup } from './EMSCategoryUpdatePopup';\r\n\r\nexport class EMSCategory extends React.Component {\r\n\r\n    state = {\r\n        EMSVCategory: [{\r\n            CategoryId: 0,\r\n            ParentId: 0,\r\n            ParentDesc: '',\r\n            CategoryType: '',\r\n            CategoryCode: '',\r\n            CategoryDesc: '',\r\n            SortOrder: 0,\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }], show: false, canSave: false\r\n    }\r\n\r\n\r\n    // get ems category\r\n    getEMSCategory = () => {\r\n        const url = baseApiUrl() + 'EMSCategory';\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ EMSVCategory: responseData });\r\n\r\n            console.log(this.state.EMSVCategory);\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n\r\n    eMSCategoryInsertPopup = React.createRef<EMSCategoryInsertPopup>();\r\n    eMSCategoryUpdatePopup = React.createRef<EMSCategoryUpdatePopup>();\r\n\r\n    render() {\r\n        return (\r\n            <Paper>\r\n                <Table style={{ paddingTop: 10, paddingLeft: 50, marginTop: 10 }}>\r\n                    <TableHead>\r\n                        <TableRow className='SubTableHeader textLeft'>\r\n                            <TableCell><h6><b>Category Id</b></h6></TableCell>\r\n                            <TableCell><h6><b>Category Type</b></h6></TableCell>\r\n                            <TableCell><h6><b>Parent</b></h6></TableCell>\r\n                            <TableCell><h6><b>Category Description</b></h6></TableCell>\r\n                            <TableCell>\r\n                                <EMSCategoryInsertPopup ref={this.eMSCategoryInsertPopup} getCategory={this.getEMSCategory } />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                            {this.state.EMSVCategory.map(item => (\r\n                                <TableRow hover>\r\n                                    <TableCell className=\"textCenter\"><h6>{item.CategoryId}</h6></TableCell>\r\n                                    <TableCell className=\"textCenter\"><h6>{item.CategoryType}</h6></TableCell>\r\n                                    <TableCell><h6>{item.ParentDesc}</h6></TableCell>\r\n                                    <TableCell><h6>{item.CategoryDesc}</h6></TableCell>\r\n                                    <TableCell className=\"textRight\">\r\n                                        <EMSCategoryUpdatePopup ref={this.eMSCategoryUpdatePopup} getCategory={this.getEMSCategory} EMSCategory={item} />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.getEMSCategory();\r\n    }\r\n}","import * as React from 'react';\r\nimport { EMSCategory } from './EMSCategory';\r\n\r\nexport class EMSCategoryApp extends React.Component {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <EMSCategory />\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { serializeData, baseApiUrl, getRequestOptions, getUserId, getErrorMessage, getSuccessMessage } from '../utilities/emsUtilities';\r\nimport { Button, Paper, Grid, TextField, Modal, FormControl, InputLabel, Select, MenuItem, TextareaAutosize, Checkbox, FormGroup, FormControlLabel } from '@material-ui/core';\r\n\r\nexport interface CategoryProps {\r\n    ref: any;\r\n    getCategory: Function;\r\n}\r\nexport class EMSCategoryInsertPopup extends React.Component<CategoryProps, {}> {\r\n\r\n    state = {\r\n        EMSCategory: {\r\n            CategoryId: 0,\r\n            ParentId: 0,\r\n            CategoryType: 'Category',\r\n            CategoryCode: '',\r\n            CategoryDesc: '',\r\n            SortOrder: 0,\r\n            IsActive: true,\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }, EMSCategoryList: [{\r\n            CategoryId: 0,\r\n            ParentId: 0,\r\n            CategoryType: 'Category',\r\n            CategoryCode: '',\r\n            CategoryDesc: '',\r\n            SortOrder: 0,\r\n            IsActive: true,\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }], show: false, canSave: false\r\n    }\r\n\r\n    userId = '';\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.userId = getUserId();\r\n    }\r\n\r\n    // get ems category\r\n    getEMSCategory = () => {\r\n        const url = baseApiUrl() + 'EMSCategoryByType?type=Category';\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ EMSCategoryList: responseData });\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n    //set state\r\n    handleChange = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        let currentSQState = { ...this.state.EMSCategory, [name]: value };\r\n        if (name === \"CategoryType\") {\r\n            if (value === \"Category\")\r\n                currentSQState = { ...this.state.EMSCategory, [name]: value, \"ParentId\": 0 };\r\n            this.setState({ EMSCategory: currentSQState });\r\n        } else {\r\n            this.setState({ EMSCategory: currentSQState });\r\n        }\r\n\r\n        if (this.state.EMSCategory.CategoryCode !== null && this.state.EMSCategory.CategoryCode !== 'undefined' && this.state.EMSCategory.CategoryDesc !== null && this.state.EMSCategory.CategoryDesc !== 'undefined') {\r\n            this.setState({ canSave: true });\r\n        } else\r\n            this.setState({ canSave: false });\r\n\r\n    }\r\n\r\n    //Insert Category\r\n    handleSubmit = () => {\r\n        let CategoryUrl = baseApiUrl() + 'Category/Insert';\r\n\r\n        const today = new Date().toISOString();\r\n\r\n        this.state.EMSCategory.CreatedBy = this.userId;\r\n        this.state.EMSCategory.CreatedDate = today;\r\n        this.state.EMSCategory.UpdatedBy = this.userId;\r\n        this.state.EMSCategory.UpdatedDate = today;\r\n\r\n        let requestSQOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: serializeData(this.state.EMSCategory)\r\n        }\r\n\r\n        fetch(CategoryUrl, requestSQOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            if (responseData === 400)\r\n                alert(getErrorMessage('This is a Bad Request.'));\r\n            else if (responseData === 401)\r\n                alert(getErrorMessage('You are not authorized.'));\r\n            else if (responseData === 403)\r\n                alert(getErrorMessage('You don\\'t have the access rights.'));\r\n            else if (responseData === 404)\r\n                alert(getErrorMessage('There is no data.'));\r\n            else if (responseData === 409)\r\n                alert(getErrorMessage('There is a conflict.'));\r\n            else if (responseData === 500)\r\n                alert(getErrorMessage('There is an internal server error.'));\r\n            else {\r\n                //this.handleClear();\r\n                alert(getSuccessMessage('A ' + this.state.EMSCategory.CategoryType));\r\n                if (this.state.EMSCategory.CategoryType === 'Category')\r\n                    this.getEMSCategory();\r\n            }\r\n        }).catch((errors) => {\r\n            // console.log(errors);\r\n            alert(getErrorMessage('There is an error during inserting a Category'));\r\n        })\r\n\r\n    }\r\n\r\n    //clear state\r\n    handleClear = () => {\r\n        this.setState({\r\n            EMSCategory: {\r\n                CategoryId: 0,\r\n                ParentId: 0,\r\n                CategoryType: 'Category',\r\n                CategoryCode: '',\r\n                CategoryDesc: '',\r\n                SortOrder: 0,\r\n                IsActive: true,\r\n                CreatedDate: '',\r\n                CreatedBy: '',\r\n                UpdatedDate: '',\r\n                UpdatedBy: ''\r\n            }, EMSCategoryList: [{\r\n                CategoryId: 0,\r\n                ParentId: 0,\r\n                CategoryType: 'Category',\r\n                CategoryCode: '',\r\n                CategoryDesc: '',\r\n                SortOrder: 0,\r\n                IsActive: true,\r\n                CreatedDate: '',\r\n                CreatedBy: '',\r\n                UpdatedDate: '',\r\n                UpdatedBy: ''\r\n            }], canSave: false\r\n        });\r\n\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n        this.getEMSCategory();\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n        this.props.getCategory();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <this.insertCategory />\r\n        );\r\n    }\r\n\r\n    insertCategory = () => {\r\n        return (\r\n            <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                <Grid container className=\"textRight alignRight\">\r\n                    <Button variant=\"contained\" onClick={() => { this.handleShow(); }} className=\"btnImgInsert marginRight10\" data-toggle=\"tooltip\" title=\"New Category\"><img src={window.location.origin + '/images/add_white.png'} className=\"btnImage\" /></Button>\r\n                </Grid>\r\n                <Modal className=\"insertModal\" open={this.state.show} onClose={() => { this.handleClear.call(this); this.handleClose(); }} disableBackdropClick={true}>\r\n                    <Paper className=\"ModalDiv\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={4} sm={4}>\r\n                                <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\" style={{ fontSize: 13 }}></InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        name=\"CategoryType\"\r\n                                        label=\"CategoryType\"\r\n                                        defaultValue={this.state.EMSCategory.CategoryType}\r\n                                        onChange={this.handleChange}>\r\n                                        <MenuItem value=\"Category\"><em>Category</em></MenuItem>\r\n                                        <MenuItem value=\"Subcategory\"><em>Subcategory</em></MenuItem>\r\n                                        <MenuItem value=\"Status\"><em>Status</em></MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            {this.state.EMSCategory.CategoryType && this.state.EMSCategory.CategoryType === \"Subcategory\" ?\r\n                                <Grid item xs={4} sm={4}>\r\n                                    <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                        <InputLabel id=\"demo-simple-select-outlined-label\" style={{ fontSize: 13 }}>*Category</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            name=\"ParentId\"\r\n                                            label=\"Category\"\r\n                                            onChange={this.handleChange}                                        >\r\n                                            <MenuItem value=\"\"><em>Select One</em></MenuItem>\r\n                                            {this.state.EMSCategoryList.map((item) => (\r\n                                                <MenuItem value={item.CategoryId}><em>{item.CategoryDesc}</em></MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid> : <Grid item xs={4}></Grid>\r\n                            }\r\n                            <Grid item xs={4} sm={4}>\r\n                                <TextField name=\"CategoryCode\" className=\"errorMessage\" placeholder=\"Category Code\" value={this.state.EMSCategory.CategoryCode} onChange={this.handleChange} helperText=\"Category Code\" inputProps={{ maxLength: 25 }} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} sm={6}>\r\n                                <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                    <TextField name=\"CategoryDesc\" className=\"errorMessage\" placeholder=\"Category Description\" value={this.state.EMSCategory.CategoryDesc} onChange={this.handleChange} helperText=\"Category Description\" inputProps={{ maxLength: 255 }} />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3}>\r\n                                <TextField name=\"SortOrder\" className=\"errorMessage\" type=\"number\" value={this.state.EMSCategory.SortOrder} onChange={this.handleChange} helperText=\"Sorting Order\" inputProps={{ max: 9999 }} />\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3}>\r\n                                <FormGroup>\r\n                                    <FormControlLabel control={<Checkbox checked={this.state.EMSCategory.IsActive} onChange={this.handleChange} name=\"IsActive\" />} label=\"Active\" />\r\n                                </FormGroup>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={12} className=\"textRight\">\r\n                                <Button variant='contained' color=\"primary\" onClick={() => { this.handleSubmit(); }} disabled={!this.state.canSave}>Save</Button>\r\n                                <Button variant='contained' color=\"secondary\" onClick={() => { this.handleClear(); }}>Clear</Button>\r\n                                <Button variant='contained' color=\"default\" onClick={() => { this.handleClear(); this.handleClose(); }}>Close</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Modal>\r\n            </Grid>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { baseApiUrl, getErrorMessage, getRequestOptions, getSuccessMessage, getUserId, serializeData } from '../utilities/emsUtilities';\r\nimport { Button, Paper, Grid, TextField, Modal, FormControl, InputLabel, Select, MenuItem, TextareaAutosize, FormControlLabel, Checkbox, FormGroup } from '@material-ui/core';\r\n\r\n\r\nexport interface CategoryProps {\r\n    ref: any;\r\n    getCategory: Function;\r\n    EMSCategory: any;\r\n}\r\n\r\nexport class EMSCategoryUpdatePopup extends React.Component<CategoryProps, {}>{\r\n\r\n    state = {\r\n        EMSCategory: {\r\n            CategoryId: 0,\r\n            ParentId: 0,\r\n            CategoryType: '',\r\n            CategoryCode: '',\r\n            CategoryDesc: '',\r\n            SortOrder: 0,\r\n            IsActive: true,\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }, EMSCategoryList: [{\r\n            CategoryId: 0,\r\n            ParentId: 0,\r\n            CategoryType: 'Category',\r\n            CategoryCode: '',\r\n            CategoryDesc: '',\r\n            SortOrder: 0,\r\n            IsActive: true,\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }], show: false, canSave: false\r\n    }\r\n\r\n\r\n    userId = '';\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.userId = getUserId();\r\n    }\r\n\r\n    // get ems category\r\n    getEMSCategory = () => {\r\n        const url = baseApiUrl() + 'EMSCategoryByType?type=Category';\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ EMSCategoryList: responseData });\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n    //set state\r\n    handleChange = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        const currentSQState = { ...this.state.EMSCategory, [name]: value };\r\n        this.setState({ EMSCategory: currentSQState });\r\n        if (this.state.EMSCategory.CategoryCode !== null && this.state.EMSCategory.CategoryCode !== 'undefined' && this.state.EMSCategory.CategoryDesc !== null && this.state.EMSCategory.CategoryDesc !== 'undefined') {\r\n            this.setState({ canSave: true });\r\n        } else\r\n            this.setState({ canSave: false });\r\n\r\n    }\r\n\r\n    //Insert Category\r\n    handleSubmit = () => {\r\n        let CategoryUrl = baseApiUrl() + 'Category/Update';\r\n\r\n        const today = new Date().toISOString();\r\n\r\n        this.state.EMSCategory.UpdatedBy = this.userId;\r\n        this.state.EMSCategory.UpdatedDate = today;\r\n        \r\n        let requestSQOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: serializeData(this.state.EMSCategory)\r\n        }\r\n\r\n        fetch(CategoryUrl, requestSQOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            if (responseData === 400)\r\n                alert(getErrorMessage('This is a Bad Request.'));\r\n            else if (responseData === 401)\r\n                alert(getErrorMessage('You are not authorized.'));\r\n            else if (responseData === 403)\r\n                alert(getErrorMessage('You don\\'t have the access rights.'));\r\n            else if (responseData === 404)\r\n                alert(getErrorMessage('There is no data.'));\r\n            else if (responseData === 409)\r\n                alert(getErrorMessage('There is a conflict.'));\r\n            else if (responseData === 500)\r\n                alert(getErrorMessage('There is an internal server error.'));\r\n            else {\r\n                this.setState({EMSCategory: responseData});\r\n                alert(getSuccessMessage('A ' + this.state.EMSCategory.CategoryType));\r\n                if (this.state.EMSCategory.CategoryType === 'Category')\r\n                    this.getEMSCategory();\r\n            }\r\n        }).catch((errors) => {\r\n            // console.log(errors);\r\n            alert(getErrorMessage('There is an error during inserting a Category'));\r\n        })\r\n\r\n    }\r\n\r\n    handleDelete = (id: number) => {\r\n        this.setCategory();\r\n        const delDto = {\r\n            Id: id,\r\n            ForeignKey: 0\r\n        };\r\n        const deleteRequestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: serializeData(delDto)\r\n        };\r\n\r\n        fetch(baseApiUrl() + 'Category/Delete', deleteRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            if (responseData === 400)\r\n                alert(getErrorMessage('This is a Bad Request.'));\r\n            else if (responseData === 401)\r\n                alert(getErrorMessage('You are not authorized.'));\r\n            else if (responseData === 403)\r\n                alert(getErrorMessage('You don\\'t have the access rights.'));\r\n            else if (responseData === 404)\r\n                alert(getErrorMessage('There is no data.'));\r\n            else if (responseData === 409)\r\n                alert(getErrorMessage('There is a conflict.'));\r\n            else if (responseData === 500)\r\n                alert(getErrorMessage('There is an internal server error.'));\r\n            else {\r\n                this.props.getCategory.call(this);\r\n                alert(\"It has been removed successfully.\");\r\n            }\r\n        }).catch((errors) => {\r\n            // console.log(errors);\r\n            alert(getErrorMessage('There is an error during deleting a Category'));\r\n        });\r\n\r\n        this.handleClear();\r\n    }\r\n\r\n\r\n    //clear state\r\n    handleClear = () => {\r\n        this.setState({\r\n            EMSCategory: {\r\n                CategoryId: 0,\r\n                ParentId: 0,\r\n                CategoryType: 'Category',\r\n                CategoryCode: '',\r\n                CategoryDesc: '',\r\n                SortOrder: 0,\r\n                IsActive: true,\r\n                CreatedDate: '',\r\n                CreatedBy: '',\r\n                UpdatedDate: '',\r\n                UpdatedBy: ''\r\n            }, EMSCategoryList: [{\r\n                CategoryId: 0,\r\n                ParentId: 0,\r\n                CategoryType: 'Category',\r\n                CategoryCode: '',\r\n                CategoryDesc: '',\r\n                SortOrder: 0,\r\n                IsActive: true,\r\n                CreatedDate: '',\r\n                CreatedBy: '',\r\n                UpdatedDate: '',\r\n                UpdatedBy: ''\r\n            }], canSave: false\r\n        });\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n        this.getEMSCategory();\r\n        setTimeout(() => { this.setCategory(); });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n        this.props.getCategory();\r\n    }\r\n\r\n    setCategory = () => {\r\n        this.state.EMSCategory.CategoryId = this.props.EMSCategory.CategoryId;\r\n        this.state.EMSCategory.ParentId = this.props.EMSCategory.ParentId;\r\n        this.state.EMSCategory.CategoryType = this.props.EMSCategory.CategoryType;\r\n        this.state.EMSCategory.CategoryDesc = this.props.EMSCategory.CategoryDesc;\r\n        this.state.EMSCategory.CategoryCode = this.props.EMSCategory.CategoryCode;\r\n        this.state.EMSCategory.SortOrder = this.props.EMSCategory.SortOrder;\r\n        this.state.EMSCategory.IsActive = this.props.EMSCategory.IsActive;\r\n        this.state.EMSCategory.CreatedBy = this.props.EMSCategory.CreatedBy;\r\n        this.state.EMSCategory.CreatedDate = this.props.EMSCategory.CreatedDate;\r\n        this.state.EMSCategory.UpdatedBy = this.props.EMSCategory.UpdatedBy;\r\n        const currentSQState = { ...this.state.EMSCategory, \"UpdateDate\": this.props.EMSCategory.UpdatedDate };\r\n        this.setState({ EMSCategory: currentSQState });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <this.updateCategory />\r\n        );\r\n    }\r\n\r\n    updateCategory = () => {\r\n        //const category = this.props.EMSCategory;\r\n        //let id = 0;\r\n        //if (this.props.EMSCategory && this.props.EMSCategory.CategoryId && this.props.EMSCategory.CategoryId > 0)\r\n        //    id = this.props.EMSCategory.CategoryId;\r\n        return (\r\n            <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                <Grid container className=\"textRight alignRight\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.handleShow(); }} data-toggle=\"tooltip\" title=\"Update Category\" className=\"marginLeft5\"><img src={window.location.origin + '/images/edit_white.png'} className=\"btnImage\" /></Button>\r\n                    <Button variant='contained' color=\"secondary\" onClick={() => { window.confirm('Are you sure you wish to delete this Category?') && this.handleDelete.call(this, this.props.EMSCategory.CategoryId); }} data-toggle=\"tooltip\" title=\"Delete Category\" className=\"marginLeft5\"><img src={window.location.origin + '/images/delete_white.png'} className=\"btnImage\" /></Button>\r\n                </Grid>\r\n                <Modal className=\"insertModal\" open={this.state.show} onClose={() => { this.handleClear.call(this); this.handleClose(); }} disableBackdropClick={true}>\r\n                    <Paper className=\"ModalDiv\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={4} sm={4}>\r\n                                <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\" style={{ fontSize: 13 }}></InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        name=\"CategoryType\"\r\n                                        label=\"CategoryType\"\r\n                                        defaultValue={this.state.EMSCategory.CategoryType}\r\n                                        onChange={this.handleChange}>\r\n                                        <MenuItem value=\"Category\"><em>Category</em></MenuItem>\r\n                                        <MenuItem value=\"Subcategory\"><em>Subcategory</em></MenuItem>\r\n                                        <MenuItem value=\"Status\"><em>Status</em></MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            {this.state.EMSCategory.CategoryType && this.state.EMSCategory.CategoryType === \"Subcategory\" ?\r\n                                <Grid item xs={4} sm={4}>\r\n                                    <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                        <InputLabel id=\"demo-simple-select-outlined-label\" style={{ fontSize: 13 }}>*Category</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            name=\"ParentId\"\r\n                                            label=\"Category\"\r\n                                            onChange={this.handleChange}                                        >\r\n                                            <MenuItem value=\"\"><em>Select One</em></MenuItem>\r\n                                            {this.state.EMSCategoryList.map((item) => (\r\n                                                <MenuItem value={item.CategoryId}><em>{item.CategoryDesc}</em></MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid> : <Grid item xs={4}></Grid>\r\n                            }\r\n                            <Grid item xs={4} sm={4}>\r\n                                <TextField name=\"CategoryCode\" className=\"errorMessage\" placeholder=\"Category Code\" value={this.state.EMSCategory.CategoryCode} onChange={this.handleChange} helperText=\"Category Code\" inputProps={{ maxLength: 20 }} />\r\n                                <span style={{ color: 'blue', fontSize: '11px', padding: '1.5px' }}></span>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} sm={6}>\r\n                                <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                    <TextField name=\"CategoryDesc\" className=\"errorMessage\" placeholder=\"Category Description\" value={this.state.EMSCategory.CategoryDesc} onChange={this.handleChange} helperText=\"Category Description\" inputProps={{ maxLength: 255 }} />\r\n                                    <span style={{ color: 'blue', fontSize: '11px', padding: '1.5px' }}></span>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3}>\r\n                                <TextField name=\"SortOrder\" className=\"errorMessage\" placeholder=\"Sorting Order\" value={this.state.EMSCategory.SortOrder} onChange={this.handleChange} helperText=\"Sorting Order\" inputProps={{ maxLength: 20 }} />\r\n                                <span style={{ color: 'blue', fontSize: '11px', padding: '1.5px' }}></span>\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3}>\r\n                                <FormGroup>\r\n                                    <FormControlLabel control={<Checkbox checked={this.state.EMSCategory.IsActive} onChange={this.handleChange} name=\"IsActive\" />} label=\"Active\" />\r\n                                </FormGroup>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} className=\"textRight\">\r\n                                <Button variant='contained' color=\"primary\" onClick={() => { this.handleSubmit(); }}>Save Category</Button>\r\n                                <Button variant='contained' color=\"default\" onClick={() => { this.handleClear(); this.handleClose(); }}>Close</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Modal>\r\n            </Grid>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport '@babel/polyfill';\r\nimport 'es6-promise';\r\nimport { EMSCategoryApp } from './EMSCategory/EMSCategoryApp';\r\n\r\nReactDOM.render(\r\n    <EMSCategoryApp />,\r\n    document.getElementById('emsCategory')\r\n);","// serialize JSON data to form data\r\nexport const serializeData = (data: any) => {\r\n    var buffer = [];\r\n\r\n    for (var i in data) {\r\n        var value = data[i];\r\n        buffer.push(\r\n            encodeURIComponent(i) + '=' + encodeURIComponent((value === null) ? '' : value)\r\n        );\r\n    }\r\n\r\n    var source = buffer.join('&').replace('/%20/g', '+');\r\n    return source;\r\n};\r\n\r\n// Request Options\r\nexport const requestOptions: any = {\r\n    method: 'POST',\r\n    credentials: 'include'\r\n};\r\n\r\nexport const getRequestOptions: any = {\r\n    method: 'GET',\r\n    credentials: 'include'\r\n};\r\n\r\n// Return Base API Url\r\nexport const baseUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost')\r\n        return protocol + '//' + hostname + ':44307/';\r\n    else\r\n        return protocol + '//' + hostname + '/applications/EMSApp';\r\n};\r\n\r\n// Return Base API Url\r\nexport const baseApiUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost')\r\n        return protocol + '//' + hostname + ':44354/api/';\r\n    else\r\n        return protocol + '//' + hostname + '/FrdApis/EMSAppApi/api/';\r\n};\r\n\r\n// Return Base Report API Url\r\nexport const baseReportUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost')\r\n        return 'https//firenetdev/FirenetReports/Pages/ReportViewer.aspx?';\r\n    else\r\n        return protocol + '//' + hostname + '/FirenetReports/Pages/ReportViewer.aspx?';\r\n};\r\n\r\n// Return Person API Url\r\nexport const basePersonApiUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost')\r\n        return protocol + '//' + hostname + ':44386/api/';\r\n    else\r\n        return protocol + '//' + hostname + '/FrdApis/IncidentReportApi/api/';\r\n};\r\n\r\n// Return Email API Url\r\nexport const baseEmailApiUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost' && protocol === 'http:')\r\n        return protocol + '//' + hostname + ':53512/api/';\r\n    else if (hostname === 'localhost' && protocol === 'https:')\r\n        return protocol + '//' + hostname + ':44383/api/';\r\n    else\r\n        return protocol + '//' + hostname + '/FrdApis/FRDFormApi/api/';\r\n};\r\n\r\n// get host\r\nexport const getHost: any = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    return protocol + '//' + hostname;\r\n}\r\n\r\n// get user id\r\nexport const getUserId: any = () => {\r\n    const userId = document.getElementById('userId').textContent.replace('FFX\\\\', '');\r\n    return userId;\r\n}\r\n\r\n// get user name\r\nexport const getUserName: any = () => {\r\n    const userName = document.getElementById('userName').textContent;\r\n    return userName;\r\n}\r\n\r\n// success save message\r\nexport const getSuccessMessage: any = (msg: string) => {\r\n    return msg + ' has been saved successfully.';\r\n}\r\n\r\n// error message\r\nexport const getErrorMessage: any = (msg: string) => {\r\n    return msg + ' Please refresh your browser and then try it again.If your issue persists, please open an IT Help Desk Ticket.';\r\n}\r\n\r\n// no data message\r\nexport const getNoDataFound: any = (data: string) => {\r\n    return 'There is no data. Please refresh your browser and then try it again.';\r\n}\r\n\r\nexport const onlyNumbers = (event: any) => { event.target.value = event.target.value.replace(/[^0-9]/g, '') };\r\n\r\nexport const onlyDecimal = (event: any) => { event.target.value = event.target.value.replace(/[^0-9.]/g, '') };\r\n\r\nexport const checkEmail = (value: string) => {\r\n    if (value && value.length > 0) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (re.test(value))\r\n            return true;\r\n        else {\r\n            alert('Please correct the email address!!');\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// extract Id from query string\r\nexport const getIdFromQueryString: any = (value: string) => {\r\n    let sURLVariables = value.split('&');\r\n\r\n    let params = [];\r\n    if (sURLVariables && sURLVariables[0].startsWith('Id')) {\r\n        params = value.split('=');\r\n        if (params[1] && Number(params[1]) > 0)\r\n            return Number(params[1]);\r\n    } else\r\n        return 0;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"emsCategory\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkemsapp\"] = self[\"webpackChunkemsapp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_babel_polyfill_lib_index_js-node_modules_material-ui_core_esm_index_js-n-a05e18\"], () => (__webpack_require__(\"./src/emsCategory.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}