{"version":3,"file":"src_EMSSubmit_EMSSubmitUpdatePopup_tsx.bundle.js","mappings":"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","sources":["webpack://emsapp/./src/EMSAdmin/EMSNote.tsx","webpack://emsapp/./src/EMSAdmin/EMSNoteInsertPopup.tsx","webpack://emsapp/./src/EMSAdmin/EMSNoteUpdatePopup.tsx","webpack://emsapp/./src/EMSSubmit/EMSDetail.tsx","webpack://emsapp/./src/EMSSubmit/EMSSubmitTab.tsx","webpack://emsapp/./src/EMSSubmit/EMSSubmitUpdatePopup.tsx","webpack://emsapp/./src/EMSSubmit/EMSSupplementalDoc.tsx","webpack://emsapp/./src/EMSSubmit/EMSSupplementalDocInsertPopup.tsx","webpack://emsapp/./src/EMSSubmit/EMSSupplementalDocUpdatePopup.tsx","webpack://emsapp/./src/utilities/emsUtilities.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Table, TableBody, TableRow, TableCell, TableHead, TableContainer, Grid } from '@material-ui/core';\r\nimport { EMSNoteInsertPopup } from './EMSNoteInsertPopup';\r\nimport { EMSNoteUpdatePopup } from './EMSNoteUpdatePopup';\r\nimport { baseApiUrl, getRequestOptions, getUserName } from '../utilities/emsUtilities';\r\n\r\nexport interface NoteProps {\r\n    ref: any;\r\n    ComplaintId: number;\r\n}\r\n\r\nexport class EMSNote extends React.Component<NoteProps, {}> {\r\n\r\n    state = {\r\n        Note: [{\r\n            NoteId: 0, /* For the test */\r\n            ComplaintId: 0,\r\n            Note: '',\r\n            CreatedBy: '',\r\n            CreatedDate: '',\r\n            UpdatedBy: '',\r\n            UpdatedDate: '',\r\n            AuthorName: getUserName(),\r\n        }], CanSave: false, show: false\r\n    };\r\n\r\n    userId = '';\r\n\r\n    eMSNoteInsertPopup = React.createRef<EMSNoteInsertPopup>();\r\n    eMSNoteUpdatePopup = React.createRef<EMSNoteUpdatePopup>();\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    // get ems note\r\n    getEMSNote = () => {\r\n        const url = baseApiUrl() + 'EMSNote?complaintId=' + this.props.ComplaintId;\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ Note: responseData });\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow style={(this.props.ComplaintId && this.props.ComplaintId > 0) ? {} : { display: 'none' }}>\r\n                        <th className=\"SubTableHeader\">Author Name</th>\r\n                        <th colSpan={3} className=\"SubTableHeader\"><h5>Note</h5></th>\r\n                        <th className= \"SubTableHeader\">Date & Time</th>\r\n                        <th className=\"SubTableHeader textRight\"><EMSNoteInsertPopup ref={this.eMSNoteInsertPopup} ComplaintId={this.props.ComplaintId} AuthorName={getUserName()} getEMSNote={this.getEMSNote} /> </th>\r\n                    </TableRow>\r\n                </TableHead>\r\n                {this.state.Note && this.state.Note.length > 0 && this.state.Note[0].NoteId && this.state.Note[0].NoteId > 0 ?\r\n                    <TableBody style={{ marginBottom: '10px !important' }}>\r\n                        {this.state.Note.map((item) => (\r\n                                <TableRow hover>\r\n                                    <td className=\"textLeft\">{item.AuthorName}</td>\r\n                                    <td className=\"textLeft\" colSpan={3}>{item.Note}</td>\r\n                                    <td className=\"textRight\">{item.CreatedDate ? new Date(item.CreatedDate).toLocaleDateString() : ''} {item.CreatedDate ? new Date(item.CreatedDate).toLocaleTimeString() : ''}</td>\r\n                                    <td className=\"textRight\"><EMSNoteUpdatePopup ref={this.eMSNoteUpdatePopup} Note={item} ComplaintId={this.props.ComplaintId} AuthorName={getUserName()} getEMSNote={this.getEMSNote}/></td>\r\n                                </TableRow>\r\n                        ))\r\n                    } </TableBody> : <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={6} className=\"textCenter\"><h6>No Note</h6></TableCell>\r\n                        </TableRow>\r\n                    </TableBody>}\r\n            </Table>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.getEMSNote();\r\n    }\r\n}","import * as React from 'react';\r\nimport { serializeData, baseApiUrl, requestOptions, getRequestOptions, getSuccessMessage, getErrorMessage, getUserId, getUserName, baseEmailApiUrl } from '../utilities/emsUtilities';\r\nimport { Button, Modal, TableCell, Paper, Grid, TextField, FormControlLabel, Checkbox, FormControl, InputLabel, Select, MenuItem, TextareaAutosize, InputBase, IconButton } from '@material-ui/core';\r\n\r\nexport interface NoteProps {\r\n    ref: any;\r\n    ComplaintId: number;\r\n    AuthorName: string;\r\n    getEMSNote: Function;\r\n}\r\n\r\nexport class EMSNoteInsertPopup extends React.Component<NoteProps, {}> {\r\n\r\n    state = {\r\n        Note: {\r\n            NoteId: 0, /* For the test */\r\n            ComplaintId: 0,\r\n            Note: '',\r\n            CreatedBy: '',\r\n            CreatedDate: '',\r\n            UpdatedBy: '',\r\n            UpdatedDate: '',\r\n            AuthorName: ''\r\n        }, CanSave: false, show: false\r\n    };\r\n\r\n    userId = '';\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n\r\n        this.userId = getUserId();\r\n    }\r\n\r\n    // set state\r\n    handleChange = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        const currentSQState = { ...this.state.Note, [name]: value };\r\n        this.setState({ Note: currentSQState });\r\n\r\n        if ((this.props.ComplaintId && this.props.ComplaintId > 0) && (this.state.Note !== null && this.state.Note.Note !== 'undefined' && this.state.Note.Note.length > 10)) {\r\n            this.setState({ CanSave: true });\r\n        } else\r\n            this.setState({ CanSave: false });\r\n    }\r\n\r\n    // update Person\r\n    handleSubmit = () => {\r\n        this.state.Note.ComplaintId = this.props.ComplaintId;\r\n        let NoteUrl = baseApiUrl() + 'Note/Insert';\r\n\r\n        if (this.state.Note.ComplaintId && this.state.Note.ComplaintId > 0) {\r\n            const today = new Date().toISOString();\r\n\r\n            this.state.Note.CreatedBy = this.userId;\r\n            this.state.Note.CreatedDate = today;\r\n            this.state.Note.UpdatedBy = this.userId;\r\n            this.state.Note.UpdatedDate = today;\r\n            console.log(this.state.Note);\r\n            let requestSQOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                body: serializeData(this.state.Note)\r\n            }\r\n\r\n            fetch(NoteUrl, requestSQOptions).then(res => {\r\n                if (res.status === 200)\r\n                    return res.json();\r\n                return res.status;\r\n            }).then(responseData => {\r\n                if (responseData === 400)\r\n                    alert(getErrorMessage('This is a Bad Request.'));\r\n                else if (responseData === 401)\r\n                    alert(getErrorMessage('You are not authorized.'));\r\n                else if (responseData === 403)\r\n                    alert(getErrorMessage('You don\\'t have the access rights.'));\r\n                else if (responseData === 404)\r\n                    alert(getErrorMessage('There is no data.'));\r\n                else if (responseData === 409)\r\n                    alert(getErrorMessage('There is a conflict.'));\r\n                else if (responseData === 500)\r\n                    alert(getErrorMessage('There is an internal server error.'));\r\n                else {\r\n                    alert(getSuccessMessage('A Note'));\r\n                }\r\n            }).catch((errors) => {\r\n                // console.log(errors);\r\n                alert(getErrorMessage('There is an error during inserting a Note'));\r\n            })\r\n        } else\r\n            alert('There is no Complaint Id. Please retrive a Complaint record and then add a Note again');\r\n    }\r\n\r\n    // clear state\r\n    handleClear = () => {\r\n        this.setState({\r\n\r\n            Note: {\r\n                NoteId: 0, /* For the test */\r\n                ComplaintId: 0,\r\n                Note: '',\r\n                CreatedBy: '',\r\n                CreatedDate: '',\r\n                UpdatedBy: '',\r\n                UpdatedDate: '',\r\n                AuthorType: '',\r\n                AuthorName: ''\r\n            }, CanSave: false, show: false\r\n\r\n        });\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n        this.setNote();\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n        this.props.getEMSNote();\r\n    }\r\n\r\n    setNote = () => {\r\n        this.state.Note.AuthorName = this.props.AuthorName;\r\n    }\r\n\r\n    // display UI on the Note Insert Popup Window\r\n    render() {\r\n        return (\r\n            <this.insertNote />\r\n        );\r\n    }\r\n\r\n    insertNote = () => {\r\n        return (\r\n            <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                <Grid container className=\"textRight alignRight\">\r\n                    <Button variant=\"contained\" onClick={() => { this.handleShow(); }} className=\"btnImgInsert marginRight10\" data-toggle=\"tooltip\" title=\"New Note\"><img src={window.location.origin + '/images/add_white.png'} className=\"btnImage\" /></Button>\r\n                </Grid>\r\n\r\n                <Modal className=\"insertModal\" open={this.state.show} onClose={() => { this.handleClear(); this.handleClose(); }} disableBackdropClick={true}>\r\n                    <Paper className=\"ModalDiv\">\r\n                        {/* Note */}\r\n                        <Grid container spacing={3}>\r\n                            <Paper className=\"marginTop10LightBlue\">\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} className=\"contentHeader\">\r\n                                        <h5>Add Note</h5>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField value={this.state.Note.AuthorName} name=\"AuthorName\" onChange={this.handleChange} placeholder=\"Enter Author Name\" helperText=\"* Author Name\" inputProps={{ maxLength: 150 }} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">Note</InputLabel>\r\n                                        <TextareaAutosize value={this.state.Note.Note} name=\"Note\" onChange={this.handleChange} placeholder=\"Enter Note\" rows={10} rowsMax={15} />\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"textRight popupCloseBtn\">\r\n                            <Button variant='contained' color=\"primary\" onClick={() => { this.handleSubmit(); }} disabled={!this.state.CanSave}>Save Note</Button>\r\n                            <Button variant='contained' color=\"default\" onClick={() => { this.handleClear(); this.handleClose(); }}>Close</Button>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Modal >\r\n            </Grid >\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { serializeData, baseApiUrl, requestOptions, getRequestOptions, getSuccessMessage, getErrorMessage, getUserId, getUserName, baseEmailApiUrl } from '../utilities/emsUtilities';\r\nimport { Button, Modal, TableCell, Paper, Grid, TextField, FormControlLabel, Checkbox, FormControl, InputLabel, Select, MenuItem, TextareaAutosize, InputBase, IconButton } from '@material-ui/core';\r\n\r\nexport interface NoteProps {\r\n    ref: any;\r\n    Note: any;\r\n    ComplaintId: number;\r\n    AuthorName: string;\r\n    getEMSNote: Function;\r\n}\r\n\r\nexport class EMSNoteUpdatePopup extends React.Component<NoteProps, {}> {\r\n\r\n    state = {\r\n        Note: {\r\n            NoteId: 0, /* For the test */\r\n            ComplaintId: 0,\r\n            Note: '',\r\n            CreatedBy: '',\r\n            CreatedDate: '',\r\n            UpdatedBy: '',\r\n            UpdatedDate: '',\r\n            AuthorName: ''\r\n        }, CanSave: false, show: false\r\n    };\r\n\r\n    userId = '';\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n\r\n        this.userId = getUserId();\r\n    }\r\n\r\n    // set state\r\n    handleChange = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        const currentSQState = { ...this.state.Note, [name]: value };\r\n        this.setState({ Note: currentSQState });\r\n\r\n        if ((this.props.ComplaintId && this.props.ComplaintId > 0) && (this.state.Note !== null && this.state.Note.Note !== 'undefined' && this.state.Note.Note.length > 10)) {\r\n            this.setState({ CanSave: true });\r\n        } else\r\n            this.setState({ CanSave: false });\r\n    }\r\n\r\n    // update Person\r\n    handleSubmit = () => {\r\n        this.state.Note.ComplaintId = this.props.ComplaintId;\r\n        let NoteUrl = baseApiUrl() + 'Note/Update';\r\n\r\n        if (this.state.Note.ComplaintId && this.state.Note.ComplaintId > 0) {\r\n            const today = new Date().toISOString();\r\n\r\n            this.state.Note.CreatedBy = this.userId;\r\n            this.state.Note.CreatedDate = today;\r\n            this.state.Note.UpdatedBy = this.userId;\r\n            this.state.Note.UpdatedDate = today;\r\n\r\n            let requestSQOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                body: serializeData(this.state.Note)\r\n            }\r\n\r\n            fetch(NoteUrl, requestSQOptions).then(res => {\r\n                if (res.status === 200)\r\n                    return res.json();\r\n                return res.status;\r\n            }).then(responseData => {\r\n                if (responseData === 400)\r\n                    alert(getErrorMessage('This is a Bad Request.'));\r\n                else if (responseData === 401)\r\n                    alert(getErrorMessage('You are not authorized.'));\r\n                else if (responseData === 403)\r\n                    alert(getErrorMessage('You don\\'t have the access rights.'));\r\n                else if (responseData === 404)\r\n                    alert(getErrorMessage('There is no data.'));\r\n                else if (responseData === 409)\r\n                    alert(getErrorMessage('There is a conflict.'));\r\n                else if (responseData === 500)\r\n                    alert(getErrorMessage('There is an internal server error.'));\r\n                else {\r\n                    this.setState({\r\n                        PoliceReport: responseData\r\n                    });\r\n                    alert(getSuccessMessage('A Note'));\r\n                }\r\n            }).catch((errors) => {\r\n                // console.log(errors);\r\n                alert(getErrorMessage('There is an error during inserting a Note'));\r\n            })\r\n        } else\r\n            alert('There is no Complaint Id. Please retrive a Complaint record and then add a Note again');\r\n    }\r\n\r\n    // clear state\r\n    handleClear = () => {\r\n        this.setState({\r\n            Note: {\r\n                NoteId: 0, /* For the test */\r\n                ComplaintId: 0,\r\n                Note: '',\r\n                CreatedBy: '',\r\n                CreatedDate: '',\r\n                UpdatedBy: '',\r\n                UpdatedDate: '',\r\n                AuthorType: '',\r\n                AuthorName: ''\r\n            }, CanSave: false, show: false\r\n\r\n        });\r\n    }\r\n\r\n    handleDelete = (id: number) => {\r\n        this.setNote();\r\n        const delDto = {\r\n            Id: id,\r\n            ForeignKey: 0\r\n        };\r\n\r\n        const deleteRequestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: serializeData(delDto)\r\n        };\r\n\r\n        fetch(baseApiUrl() + 'Note/Delete', deleteRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            console.log(responseData);\r\n            if (responseData === 400)\r\n                alert(getErrorMessage('This is a Bad Request.'));\r\n            else if (responseData === 401)\r\n                alert(getErrorMessage('You are not authorized.'));\r\n            else if (responseData === 403)\r\n                alert(getErrorMessage('You don\\'t have the access rights.'));\r\n            else if (responseData === 404)\r\n                alert(getErrorMessage('There is no data.'));\r\n            else if (responseData === 409)\r\n                alert(getErrorMessage('There is a conflict.'));\r\n            else if (responseData === 500)\r\n                alert(getErrorMessage('There is an internal server error.'));\r\n            else {\r\n                this.props.getEMSNote.call(this);\r\n                alert(\"It has been removed successfully.\");\r\n            }\r\n        }).catch((errors) => {\r\n            console.log(errors);\r\n            alert(getErrorMessage('There is an error during deleting a note'));\r\n        });\r\n\r\n        this.handleClear();\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n        this.setNote();\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n        this.props.getEMSNote();\r\n    }\r\n\r\n    setNote = () => {\r\n        this.state.Note.NoteId = this.props.Note.NoteId;\r\n        this.state.Note.ComplaintId = this.props.Note.ComplaintId;\r\n        this.state.Note.Note = this.props.Note.Note;\r\n        this.state.Note.CreatedBy = this.props.Note.CreatedBy;\r\n        this.state.Note.CreatedDate = this.props.Note.CreatedDate;\r\n        this.state.Note.UpdatedBy = this.props.Note.UpdatedBy;\r\n        this.state.Note.UpdatedDate = this.props.Note.UpdatedDate;\r\n        this.state.Note.AuthorName = this.props.AuthorName;\r\n    }\r\n\r\n    // display UI on the Note Insert Popup Window\r\n    render() {\r\n        return (\r\n            <this.insertNote />\r\n        );\r\n    }\r\n\r\n    insertNote = () => {\r\n        return (\r\n            <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                <Grid container className=\"textRight alignRight\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.handleShow(); }} data-toggle=\"tooltip\" title=\"Update Note\" className=\"marginLeft5\"><img src={window.location.origin + '/images/edit_white.png'} className=\"btnImage\" /></Button>\r\n                    <Button variant='contained' color=\"secondary\" onClick={() => { window.confirm('Are you sure you wish to delete this Note?') && this.handleDelete.call(this, this.props.Note.NoteId); }} data-toggle=\"tooltip\" title=\"Delete Note\" className=\"marginLeft5\"><img src={window.location.origin + '/images/delete_white.png'} className=\"btnImage\" /></Button>\r\n                </Grid>\r\n\r\n                <Modal className=\"insertModal\" open={this.state.show} onClose={() => { this.handleClear(); this.handleClose(); }} disableBackdropClick={true}>\r\n                    <Paper className=\"ModalDiv\">\r\n                        {/* Note */}\r\n                        <Grid container spacing={3}>\r\n                            <Paper className=\"marginTop10LightBlue\">\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} className=\"contentHeader\">\r\n                                        <h5>Add Note</h5>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField value={this.state.Note.AuthorName} name=\"AuthorName\" onChange={this.handleChange} placeholder=\"Enter Author Name\" helperText=\"* Author Name\" inputProps={{ maxLength: 150 }} />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">Note</InputLabel>\r\n                                        <TextareaAutosize value={this.state.Note.Note} name=\"Note\" onChange={this.handleChange} placeholder=\"Enter Note\" rows={10} rowsMax={15} />\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"textRight popupCloseBtn\">\r\n                            <Button variant='contained' color=\"primary\" onClick={() => { this.handleSubmit(); }} disabled={!this.state.CanSave}>Save Note</Button>\r\n                            <Button variant='contained' color=\"default\" onClick={() => { this.handleClear(); this.handleClose(); }}>Close</Button>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Modal >\r\n            </Grid >\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { baseApiUrl, getErrorMessage, getRequestOptions, getSuccessMessage, getUserId, serializeData } from '../utilities/emsUtilities';\r\nimport { Button, Paper, Grid, TextField, Modal, FormControl, InputLabel, Select, MenuItem, TextareaAutosize } from '@material-ui/core';\r\nimport { EMSSubmitTab } from './EMSSubmitTab'\r\n\r\nexport interface DetailProps {\r\n    ref: any;\r\n    PageName: string;\r\n    EMSVComplaint: any;\r\n}\r\n\r\n\r\nexport class EMSDetail extends React.Component<DetailProps, {}>{\r\n\r\n    state = {\r\n        EMSVComplaint: {\r\n            ComplaintId: 0,\r\n            ComplaintStatus: '',\r\n            SubmitterName: '',\r\n            SubmitterPhoneNo: '',\r\n            SubmitterShit: '',\r\n            RequestDate: '',\r\n            Location: '',\r\n            CategoryId: 0,\r\n            SubCategoryId: 0,\r\n            SubCategoryOthers: '',\r\n            Unit: '',\r\n            VehicleNumber: '',\r\n            AssetNumber: '',\r\n            ComplaintPriority: 0,\r\n            SerialNumber: '',\r\n            IncidentNumber: '',\r\n            ComplaintDetail: '',\r\n            CommentsByAdmin: '',\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: '',\r\n            CategoryDesc: '',\r\n            SubCategoryDesc: '',\r\n            WorkGroupName: '',\r\n            UnitName: ''\r\n        }, show: false, PageName: ''\r\n    }\r\n\r\n    eMSSubmitTab = React.createRef<EMSSubmitTab>();\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n        this.setComplaint();\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    setComplaint = () => {\r\n        this.state.EMSVComplaint.ComplaintId = this.props.EMSVComplaint.ComplaintId;\r\n        this.state.EMSVComplaint.ComplaintStatus = this.props.EMSVComplaint.ComplaintStatus;\r\n        this.state.EMSVComplaint.SubmitterName = this.props.EMSVComplaint.SubmitterName;\r\n        this.state.EMSVComplaint.SubmitterPhoneNo = this.props.EMSVComplaint.SubmitterPhoneNo;\r\n        this.state.EMSVComplaint.SubmitterShit = this.props.EMSVComplaint.SubmitterShit;\r\n        this.state.EMSVComplaint.RequestDate = this.props.EMSVComplaint.RequestDate;\r\n        this.state.EMSVComplaint.Location = this.props.EMSVComplaint.Location;\r\n        this.state.EMSVComplaint.CategoryId = this.props.EMSVComplaint.CategoryId;\r\n        this.state.EMSVComplaint.SubCategoryId = this.props.EMSVComplaint.SubCategoryId;\r\n        this.state.EMSVComplaint.SubCategoryOthers = this.props.EMSVComplaint.SubCategoryOthers;\r\n        this.state.EMSVComplaint.Unit = this.props.EMSVComplaint.Unit;\r\n        this.state.EMSVComplaint.VehicleNumber = this.props.EMSVComplaint.VehicleNumber;\r\n        this.state.EMSVComplaint.AssetNumber = this.props.EMSVComplaint.AssetNumber;\r\n        this.state.EMSVComplaint.ComplaintPriority = this.props.EMSVComplaint.ComplaintPriority;\r\n        this.state.EMSVComplaint.SerialNumber = this.props.EMSVComplaint.SerialNumber;\r\n        this.state.EMSVComplaint.IncidentNumber = this.props.EMSVComplaint.IncidentNumber;\r\n        this.state.EMSVComplaint.ComplaintDetail = this.props.EMSVComplaint.ComplaintDetail;\r\n        this.state.EMSVComplaint.CommentsByAdmin = this.props.EMSVComplaint.CommentsByAdmin;\r\n        this.state.EMSVComplaint.CreatedDate = this.props.EMSVComplaint.CreatedDate;\r\n        this.state.EMSVComplaint.CreatedBy = this.props.EMSVComplaint.CreatedBy;\r\n        this.state.EMSVComplaint.UpdatedDate = this.props.EMSVComplaint.UpdatedDate;\r\n        this.state.EMSVComplaint.UpdatedBy = this.props.EMSVComplaint.UpdatedBy;\r\n        this.state.EMSVComplaint.CategoryDesc = this.props.EMSVComplaint.CategoryDesc;\r\n        this.state.EMSVComplaint.SubCategoryDesc = this.props.EMSVComplaint.SubCategoryDesc;\r\n        this.state.EMSVComplaint.WorkGroupName = this.props.EMSVComplaint.WorkGroupName;\r\n        this.state.EMSVComplaint.UnitName = this.props.EMSVComplaint.UnitName;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            //<Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n            //    <Grid container className=\"textRight alignRight\" style={{ paddingBottom: \"5px\" }}>\r\n            //        <Button variant=\"contained\" onClick={() => { this.handleShow() }} data-toggle=\"tooltip\" title=\"Update Log\" className=\"marginLeft5\" style={{ backgroundColor: 'orange' }}><img src={window.location.origin + '/images/MORE_white.png'} className=\"btnImage\" /></Button>\r\n            //    </Grid>\r\n                <Modal className=\"insertModal\" open={this.state.show} onClose={() => { this.handleClose(); }} disableBackdropClick={true}>\r\n                    <Paper className=\"ModalDiv\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={4}>\r\n                            <span><strong>Submitter:</strong> {this.props.EMSVComplaint.SubmitterName}</span>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                            <span><strong>Category:</strong> {this.props.EMSVComplaint.CategoryDesc}</span>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                            <span><strong>Subcategory:</strong> {this.props.EMSVComplaint.SubCategoryDesc}</span>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                            <span><strong>Phone Number:</strong> {this.props.EMSVComplaint.SubmitterPhoneNo}</span>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                            <span><strong>Vehicle Number:</strong> {this.props.EMSVComplaint.VehicleNumber}</span>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                            <span><strong>Asset Number:</strong> {this.props.EMSVComplaint.AssetNumber}</span>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                            <span><strong>Serial Number:</strong> {this.props.EMSVComplaint.SerialNumber}</span>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                            <span><strong>Incident Number:</strong> {this.props.EMSVComplaint.IncidentNumber}</span>\r\n                            </Grid>\r\n                            <Grid item xs={4}>                                                            \r\n                            <span><strong>Complaint Status:</strong> {this.props.EMSVComplaint.ComplaintStatus}</span>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <span><strong>Complaint Detail:</strong>{this.props.EMSVComplaint.ComplaintDetail}</span>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <span><strong>Comment:</strong> {this.props.EMSVComplaint.CommentsByAdmin}</span>\r\n                            </Grid>\r\n                        <Grid item xs={12}>\r\n                            <EMSSubmitTab ref={this.eMSSubmitTab} ComplaintId={this.props.EMSVComplaint.ComplaintId} PageName={this.props.PageName} />\r\n                            </Grid>\r\n                        <Grid className=\"textRight\" item xs={12} sm={12}>\r\n                            <Button variant='contained' color=\"default\" onClick={() => { this.handleClose(); }}>Close</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Modal>\r\n            /*</Grid>*/\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { serializeData, baseApiUrl, basePersonApiUrl, requestOptions, getRequestOptions, getSuccessMessage, getErrorMessage, getUserId, onlyNumbers } from '../utilities/emsUtilities';\r\nimport { Grid, Paper, AppBar, Tabs, Tab, Box, Typography } from '@material-ui/core';\r\nimport { EMSNote } from '../EMSAdmin/EMSNote';\r\nimport { EMSSupplementalDoc } from './EMSSupplementalDoc';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`wrapped-tabpanel-${index}`}\r\n            aria-labelledby={`wrapped-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `wrapped-tab-${index}`,\r\n        'aria-controls': `wrapped-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport interface SubmitTabProps {\r\n    ref: any;\r\n    ComplaintId: number;\r\n    PageName: string;\r\n}\r\n\r\nexport class EMSSubmitTab extends React.Component<SubmitTabProps, {}> {\r\n    state = {\r\n        ComplaintId: 0,\r\n        selectedTab: 'one',\r\n        show: false,\r\n        PageName: ''\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    eMSNote = React.createRef<EMSNote>();\r\n    eMSSupplementalDoc = React.createRef<EMSSupplementalDoc>();\r\n\r\n    render() {\r\n        const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n            this.setState({ selectedTab: newValue });\r\n        };\r\n\r\n        return (\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <AppBar position=\"static\" style={{ \"padding\": \"0px\" }}>\r\n                        <Tabs value={this.state.selectedTab} onChange={handleChange} aria-label=\"simple tabs\">\r\n                            <Tab value=\"one\" label=\"Supplemental Document\" {...a11yProps('one')} />\r\n                            {this.props.PageName && this.props.PageName === 'Admin' ?\r\n                                <Tab value=\"two\" label=\"Note\" {...a11yProps('two')} /> : null}\r\n                        </Tabs>\r\n                    </AppBar>\r\n\r\n                    <TabPanel value={this.state.selectedTab} index='one'>\r\n                        <EMSSupplementalDoc ref={this.eMSSupplementalDoc} ComplaintId={this.props.ComplaintId} />\r\n                    </TabPanel>\r\n                    {this.props.PageName && this.props.PageName === 'Admin' ?\r\n                        <TabPanel value={this.state.selectedTab} index='two'>\r\n                            <EMSNote ref={this.eMSNote} ComplaintId={this.props.ComplaintId} />\r\n                        </TabPanel> : null}\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { baseApiUrl, getErrorMessage, getRequestOptions, getSuccessMessage, getUserId, getUserName, serializeData, getHost, baseEmailApiUrl } from '../utilities/emsUtilities';\r\nimport { Button, Paper, Grid, TextField, Modal, FormControl, InputLabel, Select, MenuItem, TextareaAutosize } from '@material-ui/core';\r\nimport { EMSSubmitTab } from './EMSSubmitTab'\r\nimport { EMSDetail } from './EMSDetail';\r\n\r\nexport interface ComplaintProps {\r\n    ref: any;\r\n    getEMSComplaint: Function;\r\n    getEMSCategory: Function;\r\n    EMSComplaint: any\r\n    PageName: string;\r\n    /*handleDetailShow: Function;*/\r\n}\r\n\r\nexport class EMSSubmitUpdatePopup extends React.Component<ComplaintProps, {}>{\r\n\r\n    state = {\r\n        EMSComplaint: {\r\n            ComplaintId: 0,\r\n            ComplaintStatus: '',\r\n            SubmitterName: '',\r\n            SubmitterPhoneNo: '',\r\n            SubmitterShit: '',\r\n            RequestDate: '',\r\n            Location: '',\r\n            CategoryId: 0,\r\n            SubCategoryId: 0,\r\n            SubCategoryOthers: '',\r\n            Unit: '',\r\n            VehicleNumber: '',\r\n            AssetNumber: '',\r\n            ComplaintPriority: 0,\r\n            SerialNumber: '',\r\n            IncidentNumber: '',\r\n            ComplaintDetail: '',\r\n            CommentsByAdmin: '',\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }, EMSVComplaint: {\r\n            ComplaintId: 0,\r\n            ComplaintStatus: '',\r\n            SubmitterName: '',\r\n            SubmitterPhoneNo: '',\r\n            SubmitterShit: '',\r\n            RequestDate: '',\r\n            Location: '',\r\n            CategoryId: 0,\r\n            SubCategoryId: 0,\r\n            SubCategoryOthers: '',\r\n            Unit: '',\r\n            VehicleNumber: '',\r\n            AssetNumber: '',\r\n            ComplaintPriority: 0,\r\n            SerialNumber: '',\r\n            IncidentNumber: '',\r\n            ComplaintDetail: '',\r\n            CommentsByAdmin: '',\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: '',\r\n            CategoryDesc: '',\r\n            SubCategoryDesc: '',\r\n            WorkGroupName: '',\r\n            UnitName: ''\r\n        }, EMSCategoryList: [{\r\n            CategoryId: 0,\r\n            ParentId: 0,\r\n            CategoryType: '',\r\n            CategoryCode: '',\r\n            CategoryDesc: '',\r\n            SortOrder: 0,\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }], EMSSubCategoryList: [{\r\n            CategoryId: 0,\r\n            ParentId: 0,\r\n            CategoryType: '',\r\n            CategoryCode: '',\r\n            CategoryDesc: '',\r\n            SortOrder: 0,\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }], EMSStatusList: [{\r\n            CategoryId: 0,\r\n            ParentId: 0,\r\n            CategoryType: '',\r\n            CategoryCode: '',\r\n            CategoryDesc: '',\r\n            SortOrder: 0,\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }], Email: {\r\n            From: 'DoNotReply@fairfaxcounty.gov',\r\n            To: [''],\r\n            CC: [''],\r\n            BCC: ['ykim01@fairfaxcounty.gov'],\r\n            Subject: '',\r\n            Body: ''\r\n        }, UnitList: [{\r\n            Id: 0,\r\n            Unit: '',\r\n            WorkGroupId: '',\r\n            WorkGroupAbbrv: ''\r\n        }], WorkGroupList: [{\r\n            Id: 0,\r\n            WorkGroupAbbrv: '',\r\n            WorkGroupName: '',\r\n            battalion: ''\r\n        }], show: false, showDetail: false, canSave: false, PageName: '', CurrentStatus: ''\r\n        , SerialNumberRequire: [29, 1, 35, 26, 23, 19, 53, 16, 13],\r\n        AssetNumberRequire: [29, 1, 35, 26, 23, 19, 53, 16, 13],\r\n        VehicleNumberRequire: [1, 85],\r\n        InicdentNumberRequire: [131, 132]\r\n    }\r\n\r\n    eMSSubmitTab = React.createRef<EMSSubmitTab>();\r\n    eMSDetail = React.createRef<EMSDetail>();\r\n    userId = '';\r\n    userName = '';\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.userId = getUserId();\r\n        this.userName = getUserName();\r\n    }\r\n\r\n    // get workgroup\r\n    getWorkGroup = () => {\r\n        const url = baseApiUrl() + 'Lookup/Locations';\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ WorkGroupList: responseData });\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n    // get unit\r\n    getUnit = () => {\r\n        const url = baseApiUrl() + 'Lookup/Units';\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ UnitList: responseData });\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n\r\n    // get ems category\r\n    getEMSCategory = () => {\r\n        const url = baseApiUrl() + 'EMSCategoryByType?type=Category';\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ EMSCategoryList: responseData });\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n\r\n    // get ems sub category\r\n    getEMSSubCategory = (value: number) => {\r\n        const url = baseApiUrl() + 'EMSSubCategoryById?Id=' + value;\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ EMSSubCategoryList: responseData });\r\n            console.log(this.state.EMSSubCategoryList);\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n    // get ems complaint status\r\n    getEMSStatus = () => {\r\n        const url = baseApiUrl() + 'EMSCategoryByType?Type=Status';\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            if (responseData === 404)\r\n                alert('There is no status data. Plese add status in Manage page');\r\n            else\r\n                this.setState({ EMSStatusList: responseData });\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n    //set state\r\n    handleChange = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        const currentSQState = { ...this.state.EMSComplaint, [name]: value };\r\n        this.setState({ EMSComplaint: currentSQState });\r\n        if (this.state.EMSComplaint.ComplaintDetail !== null && this.state.EMSComplaint.ComplaintDetail !== 'undefined' && this.state.EMSComplaint.IncidentNumber !== null && this.state.EMSComplaint.IncidentNumber !== 'undefined') {\r\n            this.setState({ canSave: true });\r\n        } else\r\n            this.setState({ canSave: false });\r\n        if (name === 'CategoryId' && (value !== null && value > 0)) {\r\n            this.getEMSSubCategory(value);\r\n        }\r\n    }\r\n\r\n    //Get a Complaint\r\n    getEMSVComplaint = (value: number) => {\r\n        const url = baseApiUrl() + 'EMSVComplaintById?Id=' + value;\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ EMSVComplaint: responseData });\r\n            setTimeout(() => { this.sendEmail(); }, 100);\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n    //Update Complaint\r\n    handleSubmit = () => {\r\n        if (this.state.EMSComplaint.CategoryId && this.state.EMSComplaint.CategoryId > 0) {\r\n            if (this.state.EMSComplaint.SubCategoryId && this.state.EMSComplaint.SubCategoryId > 0) {\r\n                if (this.state.EMSComplaint.SubmitterName && this.state.EMSComplaint.SubmitterName.length > 1) {\r\n                    if (this.state.EMSComplaint.SubmitterShit && this.state.EMSComplaint.SubmitterShit.length > 0) {\r\n                        if (this.state.EMSComplaint.Location && this.state.EMSComplaint.Location.length > 1) {\r\n                            if (this.state.EMSComplaint.Unit && this.state.EMSComplaint.Unit.length > 1 || this.state.EMSComplaint.CategoryId === 53) {\r\n                                if ((this.state.EMSComplaint.SerialNumber && this.state.EMSComplaint.SerialNumber.length > 1) || this.state.SerialNumberRequire.indexOf(this.state.EMSComplaint.CategoryId) < 0) {\r\n                                    if ((this.state.EMSComplaint.VehicleNumber && this.state.EMSComplaint.VehicleNumber.length > 1) || (this.state.EMSComplaint.CategoryId !== 1)) {\r\n                                        if ((this.state.EMSComplaint.AssetNumber && this.state.EMSComplaint.AssetNumber.length > 1) || this.state.AssetNumberRequire.indexOf(this.state.EMSComplaint.CategoryId) < 0) {\r\n                                            if ((this.state.EMSComplaint.IncidentNumber && this.state.EMSComplaint.IncidentNumber.length === 10) || this.state.InicdentNumberRequire.indexOf(this.state.EMSComplaint.SubCategoryId) < 0) {\r\n                                                let ComplaintUrl = baseApiUrl() + 'Complaint/Update';\r\n\r\n                                                const today = new Date().toISOString();\r\n\r\n                                                this.state.EMSComplaint.UpdatedBy = this.userId;\r\n                                                this.state.EMSComplaint.UpdatedDate = today;\r\n\r\n                                                let requestSQOptions = {\r\n                                                    method: 'POST',\r\n                                                    headers: {\r\n                                                        'Content-Type': 'application/x-www-form-urlencoded'\r\n                                                    },\r\n                                                    body: serializeData(this.state.EMSComplaint)\r\n                                                }\r\n\r\n                                                fetch(ComplaintUrl, requestSQOptions).then(res => {\r\n                                                    if (res.status === 200)\r\n                                                        return res.json();\r\n                                                    return res.status;\r\n                                                }).then(responseData => {\r\n                                                    if (responseData === 400)\r\n                                                        alert(getErrorMessage('This is a Bad Request.'));\r\n                                                    else if (responseData === 401)\r\n                                                        alert(getErrorMessage('You are not authorized.'));\r\n                                                    else if (responseData === 403)\r\n                                                        alert(getErrorMessage('You don\\'t have the access rights.'));\r\n                                                    else if (responseData === 404)\r\n                                                        alert(getErrorMessage('There is no data.'));\r\n                                                    else if (responseData === 409)\r\n                                                        alert(getErrorMessage('There is a conflict.'));\r\n                                                    else if (responseData === 500)\r\n                                                        alert(getErrorMessage('There is an internal server error.'));\r\n                                                    else {\r\n                                                        this.setState({ EMSComplaint: responseData });\r\n\r\n                                                        if (this.state.EMSComplaint.ComplaintStatus !== this.state.CurrentStatus) {\r\n                                                            this.setState({ CurrentStatue: this.state.EMSComplaint.ComplaintStatus });\r\n                                                            setTimeout(() => { this.getEMSVComplaint(this.state.EMSComplaint.ComplaintId); }, 200);\r\n                                                        } else\r\n                                                            alert(getSuccessMessage('Complaint ID #' + this.state.EMSComplaint.ComplaintId + ' '));\r\n                                                    }\r\n                                                }).catch((errors) => {\r\n                                                    // console.log(errors);\r\n                                                    alert(getErrorMessage('There is an error during inserting a complaint'));\r\n                                                })\r\n                                            } else\r\n                                                alert('Please input the Incident Number. It must be 10 characters.');\r\n                                        } else\r\n                                            alert('Please input the County Asset Number');\r\n                                    } else\r\n                                        alert('Please input the County Vehicle Number');\r\n                                } else\r\n                                    alert('Please input the Serial Number');\r\n                            } else\r\n                                alert('Please select a Unit');\r\n                        } else\r\n                            alert('Please select the Location');\r\n                    } else\r\n                        alert('Please select the Submitter Shift');\r\n                } else\r\n                    alert(\"It couldn't get the Submitter Name. Please refresh your browser and then try it again.\");\r\n            } else\r\n                alert('Please select a Subcategory');\r\n        } else\r\n            alert('Please select a Category');\r\n    }\r\n\r\n    // send email\r\n    sendEmail = () => {\r\n        this.setState({\r\n            Email: {\r\n                From: 'DoNotReply@fairfaxcounty.gov',\r\n                To: [''],\r\n                CC: [''],\r\n                BCC: ['ykim01@fairfaxcounty.gov'],\r\n                Subject: '',\r\n                Body: ''\r\n            }\r\n        });\r\n        this.state.Email.To[0] = 'FIRE-EMSSubmission@fairfaxcounty.gov';\r\n        this.state.Email.CC[0] = this.state.EMSVComplaint.CreatedBy + '@fairfaxcounty.gov';\r\n\r\n        if (this.userId && this.userId.length > 3 && this.state.Email.CC.indexOf(this.userId + '@fairfaxcounty.gov') < 0)\r\n            this.state.Email.CC.push(this.userId + '@fairfaxcounty.gov');\r\n\r\n        this.state.Email.Subject = 'Complaint (' + this.state.EMSVComplaint.ComplaintId + ') has been changed the Status to ' + this.state.EMSVComplaint.ComplaintStatus + '(' + new Date(this.state.EMSVComplaint.UpdatedDate).toLocaleDateString() + ')';\r\n\r\n        const header1 = '<!DOCTYPE html><html><head><meta charset=\"utf-8\"/><title></title></head><body>' +\r\n            '<div style=\"color:white; background-color: #3481ab; box-shadow:0.5px 0.5px #003366; border: 20px solid #3481ab; margin: 0px 10px;\">' +\r\n            '<h3 style=\"vertical-align:text-top;\"><img src=\"https://firenet/images/email/FRDPatch.jpg\" width=\"30\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span  style=\"margin-left:15px;\">EMS Submission for ' + this.state.EMSVComplaint.ComplaintId + ' (' + new Date(this.state.EMSVComplaint.CreatedDate).toLocaleDateString() + ')</span></h3></div>';\r\n\r\n        let body1 = '<div style=\"background-color:white; color:black; padding:10px;\">' +\r\n            '<span style=\"font-weight:normal\">&nbsp;&nbsp;&nbsp;<strong>Complaint Id:</strong> ' + this.state.EMSVComplaint.ComplaintId +\r\n            '</span><br /><span style=\"font-weight:normal\">&nbsp;&nbsp;&nbsp;<strong>Submitter:</strong> ' + this.state.EMSVComplaint.SubmitterName +\r\n            '</span><br /><span style=\"font-weight:normal\">&nbsp;&nbsp;&nbsp;<strong>Unit:</strong> ' + this.state.EMSVComplaint.Unit;\r\n\r\n        if (this.state.EMSVComplaint.CategoryId)\r\n            body1 = body1 + '</span><br /><span style=\"font-weight:normal\">&nbsp;&nbsp;&nbsp;<strong>Category:</strong> ' + this.state.EMSVComplaint.CategoryDesc;\r\n        if (this.state.EMSVComplaint.SubCategoryId)\r\n            body1 = body1 + '</span><br /><span style=\"font-weight:normal\">&nbsp;&nbsp;&nbsp;<strong>Subcategory:</strong> ' + this.state.EMSVComplaint.SubCategoryDesc;\r\n        if (this.state.EMSVComplaint.Location)\r\n            body1 = body1 + '</span><br /><span style=\"font-weight:normal\">&nbsp;&nbsp;&nbsp;<strong>Location:</strong> ' + this.state.EMSVComplaint.WorkGroupName;\r\n        if (this.state.EMSVComplaint.ComplaintDetail)\r\n            body1 = body1 + '</span><br /><span style=\"font-weight:normal\">&nbsp;&nbsp;&nbsp;<strong>Complaint Detail:</strong> ' + this.state.EMSVComplaint.ComplaintDetail;\r\n        if (this.state.EMSVComplaint.ComplaintDetail)\r\n            body1 = body1 + '</span><br /><span style=\"font-weight:normal\">&nbsp;&nbsp;&nbsp;<strong>Comment By Admin:</strong> ' + this.state.EMSVComplaint.CommentsByAdmin;\r\n\r\n\r\n        body1 = body1 + '</span><br /><br />if you are a <strong style=\"font-size:1.2em\">Submitter</strong> click <a href=\"' + getHost() + '/applications/emsapp' + '\">here</a> to find your complaint.<span></li>';\r\n\r\n        const footer = '<br /><br /><span style=\"font-weight:normal\">Please email <strong><a href=\"mailto:' + this.userId + '@fairfaxcounty.gov\">me</a></strong> if you have any questions.</span >' +\r\n            '<br /><br /><span style=\"font-weight:normal\">Thank you.</span><br /><span>' + this.userName + '</span></div>' +\r\n            '</body></html>';\r\n\r\n        // fist email\r\n        this.state.Email.Body = header1 + body1 + footer;\r\n\r\n        let requestSQOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: serializeData(this.state.Email)\r\n        }\r\n\r\n        fetch(baseEmailApiUrl() + 'SendEmails', requestSQOptions).then(res => {\r\n            return res.status;\r\n        }).then(responseData => {\r\n            if (responseData === 400)\r\n                alert(getErrorMessage('This is a Bad Request.'));\r\n            else if (responseData === 401)\r\n                alert(getErrorMessage('You are not authorized.'));\r\n            else if (responseData === 403)\r\n                alert(getErrorMessage('You don\\'t have the access rights.'));\r\n            else if (responseData === 404)\r\n                alert(getErrorMessage('There is no data.'));\r\n            else if (responseData === 409)\r\n                alert(getErrorMessage('There is a conflict.'));\r\n            else if (responseData === 500)\r\n                alert(getErrorMessage('There is an internal server error.'));\r\n            else {\r\n                alert('Your complaint has been submitted successfully');\r\n            }\r\n        }).catch((errors) => {\r\n            alert(getErrorMessage('There is an error during sending a Notification Email.'));\r\n        })\r\n    }\r\n\r\n    //clear state\r\n    handleClear = () => {\r\n        this.setState({\r\n            EMSComplaint: {\r\n                ComplaintId: 0,\r\n                ComplaintStatus: '',\r\n                SubmitterName: '',\r\n                SubmitterPhoneNo: '',\r\n                SubmitterShit: '',\r\n                RequestDate: '',\r\n                Loacation: '',\r\n                CategoryId: 0,\r\n                SubCategoryId: 0,\r\n                SubCategoryOthers: '',\r\n                Unit: '',\r\n                VehicleNumber: '',\r\n                AssetNumber: '',\r\n                ComlaintPriority: 0,\r\n                SerialNumber: '',\r\n                IncidentNumber: '',\r\n                ComplaintDetail: '',\r\n                CommentByAdmin: '',\r\n                CreatedDate: '',\r\n                CreatedBy: '',\r\n                UpdatedDate: '',\r\n                UpdatedBy: ''\r\n            }, showDetail: false, canSave: false, PageName: '', CurrentStatus: ''\r\n            , SerialNumberRequire: [29, 1, 35, 26, 23, 19, 53, 16, 13],\r\n            AssetNumberRequire: [29, 1, 35, 26, 23, 19, 53, 16, 13],\r\n            VehicleNumberRequire: [1, 85],\r\n            InicdentNumberRequire: [131, 132]\r\n        });\r\n    }\r\n\r\n    handleDelete = (id: number) => {\r\n        this.setComplaint();\r\n        const delDto = {\r\n            Id: id,\r\n            ForeignKey: 0\r\n        };\r\n\r\n        const deleteRequestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: serializeData(delDto)\r\n        };\r\n\r\n        fetch(baseApiUrl() + 'Complaint/Delete', deleteRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            if (responseData === 400)\r\n                alert(getErrorMessage('This is a Bad Request.'));\r\n            else if (responseData === 401)\r\n                alert(getErrorMessage('You are not authorized.'));\r\n            else if (responseData === 403)\r\n                alert(getErrorMessage('You don\\'t have the access rights.'));\r\n            else if (responseData === 404)\r\n                alert(getErrorMessage('There is no data.'));\r\n            else if (responseData === 409)\r\n                alert(getErrorMessage('There is a conflict.'));\r\n            else if (responseData === 500)\r\n                alert(getErrorMessage('There is an internal server error.'));\r\n            else {\r\n                this.props.getEMSComplaint.call(this);\r\n                alert(\"It has been removed successfully.\");\r\n            }\r\n        }).catch((errors) => {\r\n            /*console.log(errors);*/\r\n            alert(getErrorMessage('There is an error during deleting a complaint'));\r\n        });\r\n\r\n        this.handleClear();\r\n    }\r\n\r\n\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n        this.setState({ CurrentStatus: this.props.EMSComplaint.ComplaintStatus });\r\n        this.getEMSCategory();\r\n        this.getEMSSubCategory(this.props.EMSComplaint.CategoryId)\r\n        this.getEMSStatus();\r\n        this.getWorkGroup();\r\n        this.getUnit();\r\n        setTimeout(() => { this.setComplaint(); }, 200);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n        this.props.getEMSComplaint();\r\n    }\r\n\r\n    setComplaint = () => {\r\n        this.state.EMSComplaint.ComplaintId = this.props.EMSComplaint.ComplaintId ?? 0;\r\n        this.state.EMSComplaint.ComplaintStatus = this.props.EMSComplaint.ComplaintStatus;\r\n        this.state.EMSComplaint.SubmitterName = this.props.EMSComplaint.SubmitterName;\r\n        this.state.EMSComplaint.SubmitterPhoneNo = this.props.EMSComplaint.SubmitterPhoneNo;\r\n        this.state.EMSComplaint.SubmitterShit = this.props.EMSComplaint.SubmitterShit;\r\n        this.state.EMSComplaint.RequestDate = this.props.EMSComplaint.RequestDate;\r\n        this.state.EMSComplaint.Location = this.props.EMSComplaint.Location;\r\n        this.state.EMSComplaint.CategoryId = this.props.EMSComplaint.CategoryId;\r\n        this.state.EMSComplaint.SubCategoryId = this.props.EMSComplaint.SubCategoryId;\r\n        this.state.EMSComplaint.SubCategoryOthers = this.props.EMSComplaint.SubCategoryOthers;\r\n        this.state.EMSComplaint.Unit = this.props.EMSComplaint.Unit;\r\n        this.state.EMSComplaint.VehicleNumber = this.props.EMSComplaint.VehicleNumber;\r\n        this.state.EMSComplaint.AssetNumber = this.props.EMSComplaint.AssetNumber;\r\n        this.state.EMSComplaint.ComplaintPriority = this.props.EMSComplaint.ComplaintPriority;\r\n        this.state.EMSComplaint.SerialNumber = this.props.EMSComplaint.SerialNumber;\r\n        this.state.EMSComplaint.IncidentNumber = this.props.EMSComplaint.IncidentNumber;\r\n        this.state.EMSComplaint.ComplaintDetail = this.props.EMSComplaint.ComplaintDetail;\r\n        this.state.EMSComplaint.CommentsByAdmin = this.props.EMSComplaint.CommentsByAdmin;\r\n        this.state.EMSComplaint.CreatedDate = this.props.EMSComplaint.CreatedDate;\r\n        this.state.EMSComplaint.CreatedBy = this.props.EMSComplaint.CreatedBy;\r\n        this.state.EMSComplaint.UpdatedDate = this.props.EMSComplaint.UpdatedDate;\r\n        const currentSQState = { ...this.state.EMSComplaint, \"UpdatedBy\": this.props.EMSComplaint.UpdatedBy };\r\n        this.setState({ EMSComplaint: currentSQState });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                <Grid container className=\"textRight alignRight\">\r\n                    <Button variant=\"contained\" onClick={() => { this.eMSDetail.current.handleShow(); }} data-toggle=\"tooltip\" title=\"Show EMS Submission Detail\" className=\"marginLeft5\" style={{ backgroundColor: 'orange' }}><img src={window.location.origin + '/images/MORE_white.png'} className=\"btnImage\" /></Button>\r\n                    <React.Fragment>\r\n                        {this.props.PageName === 'Submit' && (this.props.EMSComplaint.ComplaintStatus === 'Completed' || this.props.EMSComplaint.ComplaintStatus === 'Denied') ? null : <Button variant=\"contained\" color=\"primary\" onClick={() => { this.handleShow(); }} data-toggle=\"tooltip\" title=\"Update EMS Submission\" className=\"marginLeft5\"><img src={window.location.origin + '/images/edit_white.png'} className=\"btnImage\" /></Button>}\r\n                        {(this.props.PageName === 'Submit' && this.props.EMSComplaint.ComplaintStatus === 'Submitted') || this.props.PageName === 'Admin' ?\r\n                            <Button variant='contained' color=\"secondary\" onClick={() => { window.confirm('Are you sure you wish to delete this EMS Submission?') && this.handleDelete.call(this, this.props.EMSComplaint.ComplaintId); }} data-toggle=\"tooltip\" title=\"Delete EMS Submission\" className=\"marginLeft5\"><img src={window.location.origin + '/images/delete_white.png'} className=\"btnImage\" /></Button> : null}\r\n                    </React.Fragment>\r\n                </Grid>\r\n                <Modal className=\"insertModal\" open={this.state.show} onClose={() => { this.handleClear.call(this); this.handleClose(); }} disableBackdropClick={true}>\r\n                    <Paper className=\"ModalDiv\">\r\n                        <Grid container spacing={2}>\r\n                            {this.props.PageName === 'Admin' ?\r\n                                <Grid item xs={2}>\r\n                                    <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                        <InputLabel id=\"demo-simple-select-outlined-label\" style={{ fontSize: 13 }}>*Status</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            name=\"ComplaintStatus\"\r\n                                            label=\"Status\"\r\n                                            value={this.state.EMSComplaint.ComplaintStatus}\r\n                                            onChange={this.handleChange}>\r\n                                            <MenuItem value=\"\"><em>All</em></MenuItem>\r\n                                            {this.state.EMSStatusList.map((item) => (\r\n                                                <MenuItem value={item.CategoryDesc}><em>{item.CategoryDesc}</em></MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid> : null}\r\n                            {this.props.PageName === 'Admin' ?\r\n                                <React.Fragment>\r\n                                    <Grid item xs={5} sm={5}>\r\n                                        <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                            <InputLabel id={this.state.EMSComplaint.CategoryId && this.state.EMSComplaint.CategoryId > 0 ? '' : 'requiredFieldLabel'} style={{ fontSize: 13 }}>*Category</InputLabel>\r\n                                            <Select\r\n                                                id={this.state.EMSComplaint.CategoryId && this.state.EMSComplaint.CategoryId > 0 ? '' : 'requiredFieldLabel'}\r\n                                                name=\"CategoryId\"\r\n                                                label=\"Category\"\r\n                                                value={this.state.EMSComplaint.CategoryId}\r\n                                                onChange={this.handleChange}>\r\n                                                <MenuItem value=\"\"><em>Select One</em></MenuItem>\r\n                                                {this.state.EMSCategoryList.map((item) => (\r\n                                                    <MenuItem value={item.CategoryId}><em>{item.CategoryDesc}</em></MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={5} sm={5}>\r\n                                        <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                            <InputLabel id={this.state.EMSComplaint.SubCategoryId && this.state.EMSComplaint.SubCategoryId > 0 ? '' : 'requiredFieldLabel'} style={{ fontSize: 13 }}>*Subcategory</InputLabel>\r\n                                            <Select\r\n                                                id={this.state.EMSComplaint.SubCategoryId && this.state.EMSComplaint.SubCategoryId > 0 ? '' : 'requiredFieldLabel'}\r\n                                                name=\"SubCategoryId\"\r\n                                                label=\"SubCategory\"\r\n                                                value={this.state.EMSComplaint.SubCategoryId}\r\n                                                onChange={this.handleChange}>\r\n                                                <MenuItem value=\"\"><em>Select One</em></MenuItem>\r\n                                                {this.state.EMSSubCategoryList.map((item) => (\r\n                                                    <MenuItem value={item.CategoryId}><em>{item.CategoryDesc}</em></MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid></React.Fragment> :\r\n                                <React.Fragment>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                            <InputLabel id={this.state.EMSComplaint.CategoryId && this.state.EMSComplaint.CategoryId > 0 ? '' : 'requiredFieldLabel'} style={{ fontSize: 13 }}>*Category</InputLabel>\r\n                                            <Select\r\n                                                id={this.state.EMSComplaint.CategoryId && this.state.EMSComplaint.CategoryId > 0 ? '' : 'requiredFieldLabel'}\r\n                                                name=\"CategoryId\"\r\n                                                label=\"Category\"\r\n                                                value={this.state.EMSComplaint.CategoryId}\r\n                                                onChange={this.handleChange}>\r\n                                                <MenuItem value=\"\"><em>Select One</em></MenuItem>\r\n                                                {this.state.EMSCategoryList.map((item) => (\r\n                                                    <MenuItem value={item.CategoryId}><em>{item.CategoryDesc}</em></MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                            <InputLabel id={this.state.EMSComplaint.SubCategoryId && this.state.EMSComplaint.SubCategoryId > 0 ? '' : 'requiredFieldLabel'} style={{ fontSize: 13 }}>*Subcategory</InputLabel>\r\n                                            <Select\r\n                                                id={this.state.EMSComplaint.SubCategoryId && this.state.EMSComplaint.SubCategoryId > 0 ? '' : 'requiredFieldLabel'}\r\n                                                name=\"SubCategoryId\"\r\n                                                label=\"SubCategory\"\r\n                                                value={this.state.EMSComplaint.SubCategoryId}\r\n                                                onChange={this.handleChange}>\r\n                                                <MenuItem value=\"\"><em>Select One</em></MenuItem>\r\n                                                {this.state.EMSSubCategoryList.map((item) => (\r\n                                                    <MenuItem value={item.CategoryId}><em>{item.CategoryDesc}</em></MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid></React.Fragment>}\r\n                            <Grid item xs={4} sm={4}>\r\n                                <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                    <InputLabel style={{ fontSize: 13 }}>*Location</InputLabel>\r\n                                    <Select\r\n                                        name=\"Location\"\r\n                                        label=\"Location\"\r\n                                        value={this.state.EMSComplaint.Location}\r\n                                        onChange={this.handleChange}>\r\n                                        <MenuItem value=\"\"><em>Select One</em></MenuItem>\r\n                                        {this.state.WorkGroupList.map((item) => (\r\n                                            <MenuItem value={item.WorkGroupAbbrv}><em>{item.WorkGroupName}</em></MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={4} sm={4}>\r\n                                <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                    <InputLabel style={{ fontSize: 13 }}>*Shift</InputLabel>\r\n                                    <Select\r\n                                        name=\"SubmitterShit\"\r\n                                        label=\"Shift\"\r\n                                        value={this.state.EMSComplaint.SubmitterShit}\r\n                                        onChange={this.handleChange}>\r\n                                        <MenuItem value=\"\"><em>Select One</em></MenuItem>\r\n                                        <MenuItem value=\"A\"><em>A</em></MenuItem>\r\n                                        <MenuItem value=\"B\"><em>B</em></MenuItem>\r\n                                        <MenuItem value=\"C\"><em>C</em></MenuItem>\r\n                                        <MenuItem value=\"D\"><em>D</em></MenuItem>\r\n                                        <MenuItem value=\"Volunteer\"><em>Volunteer</em></MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={4} sm={4}>\r\n                                <FormControl variant=\"outlined\" className=\"selectForm\" style={{ width: '100%' }}>\r\n                                    <InputLabel id={(this.state.EMSComplaint.CategoryId === 0 || this.state.EMSComplaint.CategoryId === 53) || (this.state.EMSComplaint.Unit && this.state.EMSComplaint.Unit.length > 0) ? '' : 'requiredFieldLabel'} style={{ fontSize: 13 }}>*Unit</InputLabel>\r\n                                    <Select\r\n                                        id={(this.state.EMSComplaint.CategoryId === 0 || this.state.EMSComplaint.CategoryId === 53) || (this.state.EMSComplaint.Unit && this.state.EMSComplaint.Unit.length > 0) ? '' : 'requiredFieldLabel'}\r\n                                        name=\"Unit\"\r\n                                        label=\"Unit\"\r\n                                        value={this.state.EMSComplaint.Unit}\r\n                                        onChange={this.handleChange}>\r\n                                        <MenuItem value={0} ><em>Select One</em></MenuItem>\r\n                                        {this.state.UnitList.map((item) => (\r\n                                            <MenuItem value={item.Unit}><em>{item.Unit}</em></MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6}>\r\n                                {this.state.SerialNumberRequire.indexOf(this.state.EMSComplaint.CategoryId) > -1 ? <TextField name=\"SerialNumber\" id={this.state.EMSComplaint.SerialNumber && this.state.EMSComplaint.SerialNumber.length > 1 ? '' : 'requiredFieldLabel'} className=\"errorMessage\" placeholder=\"Serial Number\" value={this.state.EMSComplaint.SerialNumber} onChange={this.handleChange} helperText=\"Serial Number\" inputProps={{ maxLength: 11 }} /> : <TextField name=\"SerialNumber\" className=\"errorMessage\" placeholder=\"Serial Number\" value={this.state.EMSComplaint.SerialNumber} onChange={this.handleChange} helperText=\"Serial Number\" inputProps={{ maxLength: 11 }} />}\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6}>\r\n                                {this.state.VehicleNumberRequire.indexOf(this.state.EMSComplaint.CategoryId) > -1 ? <TextField name=\"VehicleNumber\" id={this.state.EMSComplaint.VehicleNumber && this.state.EMSComplaint.VehicleNumber.length > 1 ? '' : 'requiredFieldLabel'} className=\"errorMessage\" placeholder=\"Vehicle Number\" value={this.state.EMSComplaint.VehicleNumber} onChange={this.handleChange} helperText=\"Vehicle Number\" inputProps={{ maxLength: 10 }} /> : <TextField name=\"VehicleNumber\" className=\"errorMessage\" placeholder=\"Vehicle Number\" value={this.state.EMSComplaint.VehicleNumber} onChange={this.handleChange} helperText=\"Vehicle Number\" inputProps={{ maxLength: 11 }} />}\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6}>\r\n                                {this.state.AssetNumberRequire.indexOf(this.state.EMSComplaint.CategoryId) > -1 ? <TextField name=\"AssetNumber\" id={this.state.EMSComplaint.AssetNumber && this.state.EMSComplaint.AssetNumber.length > 1 ? '' : 'requiredFieldLabel'} className=\"errorMessage\" placeholder=\"County Asset Number\" value={this.state.EMSComplaint.AssetNumber} onChange={this.handleChange} helperText=\"County Asset Number\" inputProps={{ maxLength: 10 }} /> : <TextField name=\"AssetNumber\" className=\"errorMessage\" placeholder=\"County Asset Number\" value={this.state.EMSComplaint.AssetNumber} onChange={this.handleChange} helperText=\"County Asset Number\" inputProps={{ maxLength: 10 }} />}\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6}>\r\n                                {this.state.InicdentNumberRequire.indexOf(this.state.EMSComplaint.SubCategoryId) > -1 ? <TextField name=\"IncidentNumber\" id={this.state.EMSComplaint.IncidentNumber && this.state.EMSComplaint.IncidentNumber.length > 1 ? '' : 'requiredFieldLabel'} className=\"errorMessage\" placeholder=\"Incident Number\" value={this.state.EMSComplaint.IncidentNumber} onChange={this.handleChange} helperText=\"Incident Number\" inputProps={{ maxLength: 11 }} /> : <TextField name=\"IncidentNumber\" className=\"errorMessage\" placeholder=\"Incident Number\" value={this.state.EMSComplaint.IncidentNumber} onChange={this.handleChange} helperText=\"Incident Number\" inputProps={{ maxLength: 11 }} />}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <TextField\r\n                                    name=\"ComplaintDetail\"\r\n                                    id=\"filled-multiline-static\"\r\n                                    label=\"Complaint Detail\"\r\n                                    multiline\r\n                                    rows={5}\r\n                                    className=\"errorMessage\"\r\n                                    placeholder=\"Complaint Detail\"\r\n                                    style={{ width: '100%' }}\r\n                                    value={this.state.EMSComplaint.ComplaintDetail}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            {this.props.PageName && this.props.PageName === 'Admin' ?\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        name=\"CommentsByAdmin\"\r\n                                        id=\"filled-multiline-static\"\r\n                                        label=\"Comment Box\"\r\n                                        multiline\r\n                                        rows={5}\r\n                                        className=\"errorMessage\"\r\n                                        placeholder=\"Write a Comment\"\r\n                                        style={{ width: '100%' }}\r\n                                        value={this.state.EMSComplaint.CommentsByAdmin}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </Grid> : <Grid item xs={12}></Grid>}\r\n                            <Grid item xs={12} className=\"textRight popupCloseBtn\">\r\n                                <Button variant='contained' color=\"primary\" onClick={() => { this.handleSubmit(); }}>Update Complaint</Button>\r\n                                <Button variant='contained' color=\"default\" onClick={() => { this.handleClear(); this.handleClose(); }}>Close</Button>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <EMSSubmitTab ref={this.eMSSubmitTab} ComplaintId={this.props.EMSComplaint.ComplaintId} PageName={this.props.PageName} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n                </Modal>\r\n                <EMSDetail ref={this.eMSDetail} PageName={this.props.PageName} EMSVComplaint={this.props.EMSComplaint} />\r\n            </Grid>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Table, TableBody, TableRow, TableCell, TableHead, TableContainer, Grid, Button } from '@material-ui/core';\r\nimport { EMSSupplementalDocInsertPopup } from './EMSSupplementalDocInsertPopup';\r\nimport { EMSSupplementalDocUpdatePopup } from './EMSSupplementalDocUpdatePopup';\r\nimport { baseApiUrl, getRequestOptions, getUserId } from '../utilities/emsUtilities';\r\n\r\nexport interface EMSSupplementalDocProps {\r\n    ref: any;\r\n    ComplaintId: number;\r\n}\r\n\r\nexport class EMSSupplementalDoc extends React.Component<EMSSupplementalDocProps, {}> {\r\n\r\n    state = {\r\n        EMSSupplementalDoc: [{\r\n            DocId: 0,\r\n            ComplaintId: 0,\r\n            DocType: '',\r\n            DocName: '',\r\n            DocDesc: '',\r\n            DocDescOther: '',\r\n            DocExt: '',\r\n            Doc: new Array,\r\n            ImageDoc: '',\r\n            DocLocation: '',\r\n            Comments: '',\r\n            CreatedDate: '',\r\n            CreateBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }]\r\n    }\r\n\r\n    url = '';\r\n    userId = '';\r\n\r\n    eMSSupplementalDocInsertPopup = React.createRef<EMSSupplementalDocInsertPopup>();\r\n    eMSSupplementalDocUpdatePopup = React.createRef<EMSSupplementalDocUpdatePopup>();\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.userId = getUserId();\r\n    }\r\n\r\n    // get ems supplemental document\r\n    getEMSSupplementalDOC = () => {\r\n        const url = baseApiUrl() + 'EMSSupplementalDocByComplaintId?complaintId=' + this.props.ComplaintId;\r\n\r\n        fetch(url, getRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            this.setState({ EMSSupplementalDoc: responseData });\r\n            console.log(this.state.EMSSupplementalDoc);\r\n        }).catch((errors) => {\r\n            //console.log(errors);\r\n        });\r\n    }\r\n\r\n    // download file from database\r\n    saveByteArray = (doc: any, docType: string, docName: string) => {\r\n        //var binaryString = window.atob(doc);\r\n        //var binaryLen = binaryString.length;\r\n        //var bytes = new Uint8Array(binaryLen);\r\n        //for (var i = 0; i < binaryLen; i++) {\r\n        //    var ascii = binaryString.charCodeAt(i);\r\n        //    bytes[i] = ascii;\r\n        //}\r\n        //var blob = new Blob([bytes], { type: \"application/\" + docType });\r\n        var link = document.createElement('a');\r\n        link.href = this.getObjectUrl(doc, docType, docName);\r\n        var fileName = docName;\r\n        link.download = fileName;\r\n        link.click();\r\n    }\r\n\r\n    // get object url\r\n    getObjectUrl = (doc: any, docType: string, docName: string) => {\r\n        var binaryString = window.atob(doc);\r\n        var binaryLen = binaryString.length;\r\n        var bytes = new Uint8Array(binaryLen);\r\n        for (var i = 0; i < binaryLen; i++) {\r\n            var ascii = binaryString.charCodeAt(i);\r\n            bytes[i] = ascii;\r\n        }\r\n        var blob = new Blob([bytes], { type: \"application/\" + docType });\r\n        var link = document.createElement('a');\r\n        link.href = window.URL.createObjectURL(blob);\r\n        return link.href;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table>\r\n                <TableHead>\r\n                    {(this.props.ComplaintId && this.props.ComplaintId > 0) ?\r\n                        <TableRow>\r\n                            <th colSpan={3} className=\"SubTableHeader\"><h5>Supplemental Document</h5></th>\r\n                            <th colSpan={2} className=\"textRight SubTableHeader\">\r\n                                <EMSSupplementalDocInsertPopup ref={this.eMSSupplementalDocInsertPopup} ComplaintId={this.props.ComplaintId} getEMSSupplementalDOC={this.getEMSSupplementalDOC} />\r\n                            </th>\r\n                        </TableRow> : <TableRow>\r\n                            <th colSpan={5} className=\"SubTableHeader\"><h5>Supplemental Document</h5></th>\r\n                        </TableRow>}\r\n                    <TableRow>\r\n                        <th style={{ \"textAlign\": \"center\" }}>Type</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th>Date</th>\r\n                    </TableRow>\r\n                </TableHead>\r\n                {this.state.EMSSupplementalDoc && this.state.EMSSupplementalDoc.length > 0 && this.state.EMSSupplementalDoc[0].DocId && this.state.EMSSupplementalDoc[0].DocId > 0 ?\r\n                    <TableBody>\r\n                        {\r\n                            this.state.EMSSupplementalDoc.map((item, index) => (\r\n                                <TableRow key={index}>\r\n                                    <td className=\"textLeft\"><Button variant=\"contained\" onClick={() => { this.saveByteArray(item.Doc, item.DocType, item.DocName); }} data-toggle=\"tooltip\" title={\"Download \" + item.DocName} className=\"btnFileImage marginLeft5\">{item.DocType === 'Image' ? <img src={this.getObjectUrl(item.Doc, item.DocType, item.DocName)} className=\"thumnail\" alt={item.DocType} /> : <img src={window.location.origin + '/images/' + item.DocType + '.png'} className=\"fileImage\" alt={item.DocType} />}</Button></td>\r\n                                    <td className=\"textLeft\">{item.DocName}</td>\r\n                                    <td className=\"textLeft\">{item.DocDesc}{item.DocDescOther && item.DocDescOther.length > 0 ? ' - ' + item.DocDescOther : ''}</td>\r\n                                    <td className=\"textLeft\">{item.CreatedDate ? new Date(item.CreatedDate).toLocaleString() : ''}</td>\r\n                                    <th className=\"textRight\">\r\n                                        {(item.DocId === null || item.DocId === 0) ? null : <EMSSupplementalDocUpdatePopup ref={this.eMSSupplementalDocUpdatePopup} ComplaintId={this.props.ComplaintId} SupplementalDoc={item} getEMSSupplementalDOC={this.getEMSSupplementalDOC}/>}\r\n                                    </th>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody> : <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} className=\"textCenter\"><h6>No Document</h6></TableCell>\r\n                        </TableRow>\r\n                    </TableBody>}\r\n            </Table>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this.getEMSSupplementalDOC();       \r\n    }\r\n}","import * as React from 'react';\r\nimport { Grid, Card, Paper, Button, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { serializeData, baseApiUrl, getSuccessMessage, getErrorMessage, getRequestOptions, requestOptions, getUserId } from '../utilities/emsUtilities';\r\n\r\nexport interface EMSSupplementalDocInsertProps {\r\n    ref: any;\r\n    ComplaintId: number;\r\n    getEMSSupplementalDOC: Function;\r\n}\r\n\r\nexport class EMSSupplementalDocInsertPopup extends React.Component<EMSSupplementalDocInsertProps, {}> {\r\n\r\n    state = {\r\n        EMSSupplementalDoc: {\r\n            DocId: 0,\r\n            ComplaintId: 0,\r\n            DocType: '',\r\n            DocName: '',\r\n            DocDesc: '',\r\n            DocDescOther: '',\r\n            DocExt: '',\r\n            Doc: new Array,\r\n            ImageDoc: '',\r\n            DocLocation: '',\r\n            Comments: '',\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }, file: [{}], Description: '', show: false\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    // set state\r\n    handleChange = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        if (name === 'file')\r\n            this.setState({ file: target.files });\r\n        else if (name === 'Description')\r\n            this.setState({ Description: value });\r\n    }\r\n\r\n    handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        this.fileUpload(this.state.file);\r\n        this.props.getEMSSupplementalDOC();\r\n    }\r\n\r\n    fileUpload = (file: any) => {\r\n        /*if (this.props.ComplaintId !== null && this.props.ComplaintId > 0) {*/\r\n            const url = baseApiUrl() + 'SupplementalDoc/Insert';\r\n            const userId = getUserId();\r\n            let formData = new FormData();\r\n\r\n            if (file) {\r\n                for (var i = 0; i < file.length; i++) {\r\n                    formData.append('file[$(i)]', file[i]);\r\n                }\r\n                formData.append('ComplaintId', this.props.ComplaintId.toString());\r\n                formData.append('userId', userId);\r\n                formData.append('Description', this.state.Description);\r\n\r\n                console.log(formData);\r\n\r\n                let requestOptions = {\r\n                    withCredentials: true,\r\n                    method: 'POST',\r\n                    body: formData\r\n                }\r\n\r\n                fetch(url, requestOptions).then(res => {\r\n                    //if (res.status === 200)\r\n                    //    return res.json();\r\n                    return res.status\r\n\r\n                }).then(responseData => {\r\n                    if (responseData === 400)\r\n                        alert(getErrorMessage('This is a Bad Request.'));\r\n                    else if (responseData === 401)\r\n                        alert(getErrorMessage('You are not authorized.'));\r\n                    else if (responseData === 403)\r\n                        alert(getErrorMessage('You don\\'t have the access rights.'));\r\n                    else if (responseData === 404)\r\n                        alert(getErrorMessage('There is no data.'));\r\n                    else if (responseData === 409)\r\n                        alert(getErrorMessage('There is a conflict.'));\r\n                    else if (responseData === 500)\r\n                        alert(getErrorMessage('There is an internal server error.'));\r\n                    else {\r\n                        alert(getSuccessMessage('A Supplemental Document'));\r\n                        this.props.getEMSSupplementalDOC();\r\n                        this.handleClear();\r\n                    }\r\n                }).catch((errors) => {\r\n                    alert(getErrorMessage('There is an error during inserting a Supplemental Document'));\r\n                });\r\n            } else\r\n                alert('Please select a file')\r\n    }\r\n\r\n    handleClear = () => {\r\n        this.setState({\r\n\r\n            EMSSupplementalDoc: {\r\n                DocId: 0,\r\n                ComplaintId: 0,\r\n                DocType: '',\r\n                DocName: '',\r\n                DocDesc: '',\r\n                DocDescOther: '',\r\n                DocExt: '',\r\n                Doc: new Array,\r\n                ImageDoc: '',\r\n                DocLocation: '',\r\n                Comments: '',\r\n                CreatedDate: '',\r\n                CreatedBy: '',\r\n                UpdatedDate: '',\r\n                UpdatedBy: ''\r\n            }, file: [{}], Description: ''\r\n\r\n        });\r\n    };\r\n\r\n\r\n    // display UI on the Person Search Popup Window\r\n    render() {\r\n        if (this.props.ComplaintId && this.props.ComplaintId > 0) {\r\n\r\n            return (\r\n                <form onSubmit={this.handleSubmit} style={{ marginBottom: \"10px\", marginRight: \"10px\" }}>\r\n                    <Card className=\"supervisorInformationDiv\" style={{ padding: \"10px 10px\" }}>\r\n                        <Grid container>\r\n                            <Grid item xs={8} container>\r\n                                    <Grid item xs={12}>\r\n                                        <input type=\"file\" multiple name=\"file\" id=\"fileInput\" onChange={this.handleChange} accept=\".jpg, .png, .pdf, .doc, .docx, .xls, .xlsx, .m4a\" style={{ marginLeft: \"10px\", width: \"100%\" }} />\r\n\r\n                                    </Grid> \r\n                            </Grid>\r\n                            {(this.props.ComplaintId !== null && this.props.ComplaintId > 0) ?\r\n                                <Grid item xs={4}><Button variant='contained' color=\"primary\" type=\"button\" className=\"btnImgInsert\" onClick={this.handleSubmit}>Upload</Button></Grid> : null}\r\n\r\n                        </Grid>\r\n                    </Card>\r\n                </form>\r\n            );\r\n        } else {\r\n            return (\r\n                null\r\n            );\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport { serializeData, baseApiUrl, basePersonApiUrl, requestOptions, getRequestOptions, getSuccessMessage, getErrorMessage, getUserId, getUserName, baseEmailApiUrl, checkEmail, onlyNumbers } from '../utilities/emsUtilities';\r\nimport { Button, Grid, TextField, FormControl, InputLabel, Select, MenuItem, Modal, Paper, FormHelperText } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport interface EMSSupplementalDocUpdateProps {\r\n    ref: any;\r\n    ComplaintId: number;\r\n    SupplementalDoc: any;\r\n    getEMSSupplementalDOC: Function;\r\n}\r\n\r\nexport class EMSSupplementalDocUpdatePopup extends React.Component<EMSSupplementalDocUpdateProps, {}> {\r\n\r\n    state = {\r\n        EMSSupplementalDoc: {\r\n            DocId: 0,\r\n            ComplaintId: 0,\r\n            DocType: '',\r\n            DocName: '',\r\n            DocDesc: '',\r\n            DocDescOther: '',\r\n            DocExt: '',\r\n            Doc: new Array,\r\n            ImageDoc: '',\r\n            DocLocation: '',\r\n            Comments: '',\r\n            CreatedDate: '',\r\n            CreatedBy: '',\r\n            UpdatedDate: '',\r\n            UpdatedBy: ''\r\n        }, file: {}, Description: '', show: false\r\n    }\r\n\r\n    url = '';\r\n    userId = '';\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n\r\n        this.userId = getUserId();\r\n    }\r\n\r\n    // set state\r\n    handleChange = (event: any) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n\r\n        if (name === 'file')\r\n            this.setState({ file: target.files[0] });\r\n        else if (name === 'Description')\r\n            this.setState({ Description: value });\r\n    }\r\n\r\n    // insert or update supervisor record\r\n    handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        this.fileUpload(this.state.file);\r\n    }\r\n\r\n    fileUpload = (file: any) => {\r\n        if (this.props.ComplaintId !== null && this.props.ComplaintId > 0) {\r\n            const url = baseApiUrl() + 'SupplementalDoc/Update';\r\n            const userId = getUserId();\r\n            let formData = new FormData();\r\n            if (file) {\r\n                formData.append('id', this.props.SupplementalDoc.DocId);\r\n                formData.append('file', file);\r\n                formData.append('ComplaintId', this.props.ComplaintId.toString());\r\n                formData.append('userId', userId);\r\n                formData.append('Description', this.state.Description);\r\n                \r\n\r\n                let requestOptions = {\r\n                    withCredentials: true,\r\n                    method: 'POST',\r\n                    body: formData\r\n                }\r\n\r\n                fetch(url, requestOptions).then(res => {\r\n                    if (res.status === 200)\r\n                        return res.json();\r\n                    return res.status\r\n\r\n                }).then(responseData => {\r\n                    if (responseData === 400)\r\n                        alert(getErrorMessage('This is a Bad Request.'));\r\n                    else if (responseData === 401)\r\n                        alert(getErrorMessage('You are not authorized.'));\r\n                    else if (responseData === 403)\r\n                        alert(getErrorMessage('You don\\'t have the access rights.'));\r\n                    else if (responseData === 404)\r\n                        alert(getErrorMessage('There is no data.'));\r\n                    else if (responseData === 409)\r\n                        alert(getErrorMessage('There is a conflict.'));\r\n                    else if (responseData === 500)\r\n                        alert(getErrorMessage('There is an internal server error.'));\r\n                    else {\r\n                        alert(getSuccessMessage('A Supplemental Document '));\r\n                        this.state.EMSSupplementalDoc.DocName = responseData.DocName;\r\n                      \r\n                    }\r\n                }).catch((errors) => {\r\n                    alert(getErrorMessage('There is an error during Updating a Supplemental Document'));\r\n                });\r\n            } else\r\n                alert('Please select a file')\r\n        } else\r\n            alert(\"This person doesn't have a complaint\");\r\n    }\r\n\r\n    handleDelete = (event: any) => {\r\n        const delDto = {\r\n            Id: this.props.SupplementalDoc.DocId,\r\n            ForeignKey: this.props.ComplaintId\r\n        };\r\n\r\n        const deleteRequestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: serializeData(delDto)\r\n        };\r\n\r\n        fetch(baseApiUrl() + 'SupplementalDoc/Delete', deleteRequestOptions).then(res => {\r\n            if (res.status === 200)\r\n                return res.json();\r\n            return res.status;\r\n        }).then(responseData => {\r\n            if (responseData === 400)\r\n                alert(getErrorMessage('This is a Bad Request.'));\r\n            else if (responseData === 401)\r\n                alert(getErrorMessage('You are not authorized.'));\r\n            else if (responseData === 403)\r\n                alert(getErrorMessage('You don\\'t have the access rights.'));\r\n            else if (responseData === 404)\r\n                alert(getErrorMessage('There is no data.'));\r\n            else if (responseData === 409)\r\n                alert(getErrorMessage('There is a conflict.'));\r\n            else if (responseData === 500)\r\n                alert(getErrorMessage('There is an internal server error.'));\r\n            else {\r\n                this.setState({ CitizenInjury: responseData });\r\n                alert('This Supplemental Document has been removed');\r\n                this.props.getEMSSupplementalDOC();\r\n            }\r\n        }).catch((errors) => {\r\n            // console.log(errors);\r\n            alert(getErrorMessage('There is an error during deleting a Supplemental Document'));\r\n        });\r\n    }\r\n\r\n    handleClear = () => {\r\n        this.setState({\r\n\r\n            EMSSupplementalDoc: {\r\n                DocId: 0,\r\n                ComplaintId: 0,\r\n                DocType: '',\r\n                DocName: '',\r\n                DocDesc: '',\r\n                DocDescOther: '',\r\n                DocExt: '',\r\n                Doc: new Array,\r\n                ImageDoc: '',\r\n                DocLocation: '',\r\n                Comments: '',\r\n                CreatedDate: '',\r\n                CreatedBy: '',\r\n                UpdatedDate: '',\r\n                UpdatedBy: ''\r\n            }, file: [{}], Description: ''\r\n\r\n        });\r\n\r\n        /*this.props.getComplaint.call(this, this.props.ComplaintId);*/\r\n    };\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true });\r\n        this.setSupplementalDoc();\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n        this.props.getEMSSupplementalDOC();\r\n    }\r\n\r\n\r\n    // set a FRD member\r\n    setSupplementalDoc = () => {\r\n        this.state.EMSSupplementalDoc.DocId = this.props.SupplementalDoc.DOcId;\r\n        this.state.EMSSupplementalDoc.ComplaintId = this.props.SupplementalDoc.ComplaintId;\r\n        this.state.EMSSupplementalDoc.DocType = this.props.SupplementalDoc.DocType;\r\n        this.state.EMSSupplementalDoc.DocName = this.props.SupplementalDoc.DocName;\r\n        this.state.EMSSupplementalDoc.DocExt = this.props.SupplementalDoc.DocExt;\r\n        this.state.EMSSupplementalDoc.DocDesc = this.props.SupplementalDoc.DocDesc;\r\n        this.state.EMSSupplementalDoc.DocDescOther = this.props.SupplementalDoc.DocDescOther;\r\n        this.state.EMSSupplementalDoc.Doc = this.props.SupplementalDoc.Doc;\r\n        this.state.EMSSupplementalDoc.Comments = this.props.SupplementalDoc.Comments;\r\n        this.state.EMSSupplementalDoc.CreatedBy = this.props.SupplementalDoc.CreatedBy;\r\n        this.state.EMSSupplementalDoc.CreatedDate = this.props.SupplementalDoc.CreatedDate;\r\n        this.state.EMSSupplementalDoc.UpdatedBy = this.props.SupplementalDoc.UpdatedBy;\r\n        this.state.EMSSupplementalDoc.UpdatedDate = this.props.SupplementalDoc.UpdatedDate;\r\n\r\n        this.state.Description = this.props.SupplementalDoc.DocDesc;\r\n        /*this.state.DescriptionOther = this.props.SupplementalDoc.DocDescOther;*/\r\n    }\r\n\r\n    // download file from database\r\n    saveByteArray = (doc: any, docType: string, docName: string) => {\r\n        var binaryString = window.atob(doc);\r\n        var binaryLen = binaryString.length;\r\n        var bytes = new Uint8Array(binaryLen);\r\n        for (var i = 0; i < binaryLen; i++) {\r\n            var ascii = binaryString.charCodeAt(i);\r\n            bytes[i] = ascii;\r\n        }\r\n        var blob = new Blob([bytes], { type: \"application/\" + docType });\r\n        var link = document.createElement('a');\r\n        link.href = window.URL.createObjectURL(blob);\r\n        var fileName = docName;\r\n        link.download = fileName;\r\n        link.click();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12} style={{ textAlign: \"left\", paddingBottom: \"5px\" }}>\r\n                <Grid container className=\"textRight alignRight marginTop20\">\r\n                    <Button variant=\"contained\" onClick={() => { this.saveByteArray(this.props.SupplementalDoc.Doc, this.props.SupplementalDoc.DocType, this.props.SupplementalDoc.DocName); }} data-toggle=\"tooltip\" title={\"Download \" + this.props.SupplementalDoc.DocName} className=\"btnImgDownload marginLeft5\"><img src={window.location.origin + '/images/download_02_white.png'} className=\"btnImage\" /></Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.handleShow(); }} data-toggle=\"tooltip\" title=\"Update Supplemental Documents\" className=\"marginLeft5\"><img src={window.location.origin + '/images/edit_white.png'} className=\"btnImage\" /></Button>\r\n                    <Button variant='contained' color=\"secondary\" onClick={() => {\r\n                        window.confirm('Are you sure you wish to delete this Supplemental Document?') && this.handleDelete.call(this);\r\n                    }} data-toggle=\"tooltip\" title=\"Delete Supplemental Document\" className=\"marginLeft5\"><img src={window.location.origin + '/images/delete_white.png'} className=\"btnImage\" /></Button>\r\n                </Grid>\r\n                <Modal className=\"insertModal\" open={this.state.show} onClose={() => { this.handleClear.call(this); this.handleClose(); }} disableBackdropClick={true}>\r\n                    <Paper className=\"ModalDiv\">\r\n                        <Grid container spacing={3}>\r\n                            <Paper className=\"marginTop10LightBlue\">\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} className=\"contentHeader\">\r\n                                        <h5>Update Supplemental Document</h5>\r\n                                    </Grid>\r\n\r\n                                    {/* Supplemental Document */}\r\n                                    <Grid container item xs={12}>\r\n                                        {/*<Grid item xs={4}>*/}\r\n                                        {/*    */}{/*<img style={{ width: '85%', marginTop: '5px' }} src={(this.state.SupplementalDoc.Doc !== null) ? this.state.SupplementalDoc.Doc : '/images/blue-person-icon.png'} alt={this.state.staff.FullName} />*/}\r\n                                        {/*</Grid>*/}\r\n                                        <Grid item xs={12}><strong>Document Name: </strong>{this.state.EMSSupplementalDoc.DocName}</Grid>\r\n                                        <Grid item xs={12} container>\r\n                                            {(this.props.ComplaintId !== null && this.props.ComplaintId > 0) ?\r\n                                                <Grid item xs={12}>\r\n                                                    <input type=\"file\" name=\"file\" id=\"fileInput\" onChange={this.handleChange} accept=\".jpg, .png, .pdf, .doc, .docx, .xls, .xlsx, .m4a\" style={{ marginLeft: \"10px\", width: \"100%\" }} />\r\n                                                    {/*<h5><span style={{ color: 'darkred' }}>**</span> Recommended Image Size: <span style={{ color: 'darkblue' }}>600px x 800px</span>, File Format: <span style={{ color: 'darkblue' }}>png</span></h5>*/}\r\n                                                </Grid> : null}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"textRight popupCloseBtn\">\r\n                            <Button variant='contained' color=\"primary\" onClick={this.handleSubmit}>Save</Button>\r\n                            <Button variant='contained' color=\"default\" onClick={this.handleClose}>Close</Button>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Modal>\r\n            </Grid>\r\n        );\r\n    }\r\n}","// serialize JSON data to form data\r\nexport const serializeData = (data: any) => {\r\n    var buffer = [];\r\n\r\n    for (var i in data) {\r\n        var value = data[i];\r\n        buffer.push(\r\n            encodeURIComponent(i) + '=' + encodeURIComponent((value === null) ? '' : value)\r\n        );\r\n    }\r\n\r\n    var source = buffer.join('&').replace('/%20/g', '+');\r\n    return source;\r\n};\r\n\r\n// Request Options\r\nexport const requestOptions: any = {\r\n    method: 'POST',\r\n    credentials: 'include'\r\n};\r\n\r\nexport const getRequestOptions: any = {\r\n    method: 'GET',\r\n    credentials: 'include'\r\n};\r\n\r\n// Return Base API Url\r\nexport const baseUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost')\r\n        return protocol + '//' + hostname + ':44307/';\r\n    else\r\n        return protocol + '//' + hostname + '/applications/EMSApp';\r\n};\r\n\r\n// Return Base API Url\r\nexport const baseApiUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost')\r\n        return protocol + '//' + hostname + ':44354/api/';\r\n    else\r\n        return protocol + '//' + hostname + '/FrdApis/EMSAppApi/api/';\r\n};\r\n\r\n// Return Base Report API Url\r\nexport const baseReportUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost')\r\n        return 'https//firenetdev/FirenetReports/Pages/ReportViewer.aspx?';\r\n    else\r\n        return protocol + '//' + hostname + '/FirenetReports/Pages/ReportViewer.aspx?';\r\n};\r\n\r\n// Return Person API Url\r\nexport const basePersonApiUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost')\r\n        return protocol + '//' + hostname + ':44386/api/';\r\n    else\r\n        return protocol + '//' + hostname + '/FrdApis/IncidentReportApi/api/';\r\n};\r\n\r\n// Return Email API Url\r\nexport const baseEmailApiUrl = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    if (hostname === 'localhost' && protocol === 'http:')\r\n        return protocol + '//' + hostname + ':53512/api/';\r\n    else if (hostname === 'localhost' && protocol === 'https:')\r\n        return protocol + '//' + hostname + ':44383/api/';\r\n    else\r\n        return protocol + '//' + hostname + '/FrdApis/FRDFormApi/api/';\r\n};\r\n\r\n// get host\r\nexport const getHost: any = () => {\r\n    const protocol = window.location.protocol;\r\n    const hostname = window.location.hostname;\r\n    return protocol + '//' + hostname;\r\n}\r\n\r\n// get user id\r\nexport const getUserId: any = () => {\r\n    const userId = document.getElementById('userId').textContent.replace('FFX\\\\', '');\r\n    return userId;\r\n}\r\n\r\n// get user name\r\nexport const getUserName: any = () => {\r\n    const userName = document.getElementById('userName').textContent;\r\n    return userName;\r\n}\r\n\r\n// success save message\r\nexport const getSuccessMessage: any = (msg: string) => {\r\n    return msg + ' has been saved successfully.';\r\n}\r\n\r\n// error message\r\nexport const getErrorMessage: any = (msg: string) => {\r\n    return msg + ' Please refresh your browser and then try it again.If your issue persists, please open an IT Help Desk Ticket.';\r\n}\r\n\r\n// no data message\r\nexport const getNoDataFound: any = (data: string) => {\r\n    return 'There is no data. Please refresh your browser and then try it again.';\r\n}\r\n\r\nexport const onlyNumbers = (event: any) => { event.target.value = event.target.value.replace(/[^0-9]/g, '') };\r\n\r\nexport const onlyDecimal = (event: any) => { event.target.value = event.target.value.replace(/[^0-9.]/g, '') };\r\n\r\nexport const checkEmail = (value: string) => {\r\n    if (value && value.length > 0) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (re.test(value))\r\n            return true;\r\n        else {\r\n            alert('Please correct the email address!!');\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// extract Id from query string\r\nexport const getIdFromQueryString: any = (value: string) => {\r\n    let sURLVariables = value.split('&');\r\n\r\n    let params = [];\r\n    if (sURLVariables && sURLVariables[0].startsWith('Id')) {\r\n        params = value.split('=');\r\n        if (params[1] && Number(params[1]) > 0)\r\n            return Number(params[1]);\r\n    } else\r\n        return 0;\r\n}\r\n"],"names":[],"sourceRoot":""}